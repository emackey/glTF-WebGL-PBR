{"version":3,"file":"gltf-reference-viewer.umd.js","sources":["../node_modules/gl-matrix/lib/gl-matrix/common.js","../node_modules/gl-matrix/lib/gl-matrix/mat3.js","../node_modules/gl-matrix/lib/gl-matrix/mat4.js","../node_modules/gl-matrix/lib/gl-matrix/vec3.js","../node_modules/gl-matrix/lib/gl-matrix/vec4.js","../node_modules/gl-matrix/lib/gl-matrix/quat.js","../node_modules/gl-matrix/lib/gl-matrix/vec2.js","../src/utils.js","../src/accessor.js","../src/buffer.js","../src/buffer_view.js","../src/camera.js","../libs/hdrpng.js","../src/image.js","../src/light.js","../src/texture.js","../src/material.js","../src/primitive.js","../src/mesh.js","../src/node.js","../src/sampler.js","../src/scene.js","../src/gltf.js","../src/loader.js","../src/model_path_provider.js","../src/shader.js","../src/webgl.js","../src/shader_cache.js","../src/rendering_parameters.js","../src/renderer.js","../src/user_interface.js","../src/user_camera.js","../src/glbParser.js","../src/viewer.js","../src/main.js"],"sourcesContent":["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import { glMatrix } from 'gl-matrix';\r\n\r\nfunction jsToGl(array)\r\n{\r\n    let tensor = new glMatrix.ARRAY_TYPE(array.length);\r\n\r\n    for (let i = 0; i < array.length; ++i)\r\n    {\r\n        tensor[i] = array[i];\r\n    }\r\n\r\n    return tensor;\r\n}\r\n\r\nfunction fromKeys(target, jsonObj, ignore = [])\r\n{\r\n    for(let k of Object.keys(target))\r\n    {\r\n        if (ignore && ignore.find(function(elem){return elem == k}) !== undefined)\r\n        {\r\n            continue; // skip\r\n        }\r\n        if (jsonObj[k] !== undefined)\r\n        {\r\n            target[k] = jsonObj[k];\r\n        }\r\n    }\r\n}\r\n\r\nfunction fromParams(parameters, target, jsonObj)\r\n{\r\n    for (let p of parameters)\r\n    {\r\n        if(jsonObj[p] !== undefined)\r\n        {\r\n            target[p] = jsonObj[p];\r\n        }\r\n    }\r\n}\r\n\r\nfunction stringHash(str, seed = 0)\r\n{\r\n    for(var i = 0; i < str.length; ++i)\r\n    {\r\n        seed = Math.imul(31, seed) + str.charCodeAt(i) | 0;\r\n    }\r\n\r\n    return seed;\r\n}\r\n\r\nfunction combineHashes(hash1, hash2)\r\n{\r\n    return hash1 ^ (hash1 + 0x9e3779b9 + (hash2 << 6) + (hash2 >> 2));\r\n}\r\n\r\nfunction clamp(number, min, max)\r\n{\r\n    return Math.min(Math.max(number, min), max);\r\n}\r\n\r\nfunction getIsGlb(filename)\r\n{\r\n    return getExtension(filename) == \"glb\";\r\n}\r\n\r\nfunction getIsGltf(filename)\r\n{\r\n    return getExtension(filename) == \"gltf\";\r\n}\r\n\r\nfunction getExtension(filename)\r\n{\r\n    const split = filename.toLowerCase().split(\".\");\r\n    if (split.length == 1)\r\n    {\r\n        return undefined;\r\n    }\r\n    return split[split.length - 1];\r\n}\r\n\r\nfunction getFileName(filePath)\r\n{\r\n    const split = filePath.split(\"/\");\r\n    return split[split.length - 1];\r\n}\r\n\r\nfunction getFileNameWithoutExtension(filePath)\r\n{\r\n    return getFileName(filePath).split(\".\")[0];\r\n}\r\n\r\nfunction getContainingFolder(filePath)\r\n{\r\n    return filePath.substring(0, filePath.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nfunction combinePaths()\r\n{\r\n    const parts = Array.from(arguments);\r\n    return parts.join(\"/\");\r\n}\r\n\r\n// marker interface used to for parsing the uniforms\r\nclass UniformStruct { }\r\n\r\nclass Timer\r\n{\r\n    constructor()\r\n    {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.seconds = undefined;\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.startTime = new Date().getTime() / 1000;\r\n        this.endTime = undefined;\r\n        this.seconds = undefined;\r\n    }\r\n\r\n    stop()\r\n    {\r\n        this.endTime = new Date().getTime() / 1000;\r\n        this.seconds = this.endTime - this.startTime;\r\n    }\r\n}\r\n\r\nexport {\r\n    jsToGl,\r\n    fromKeys,\r\n    fromParams,\r\n    stringHash,\r\n    combineHashes,\r\n    clamp,\r\n    getIsGlb,\r\n    getIsGltf,\r\n    getExtension,\r\n    getFileName,\r\n    getFileNameWithoutExtension,\r\n    getContainingFolder,\r\n    combinePaths,\r\n    UniformStruct,\r\n    Timer\r\n};\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfAccessor\r\n{\r\n    constructor(bufferView = undefined, byteOffset = 0,\r\n                componentType = undefined, normalized = false,\r\n                count = undefined, type = undefined,\r\n                max = undefined, min = undefined,\r\n                sparse = undefined, name = undefined)\r\n    {\r\n        this.bufferView = bufferView;\r\n        this.byteOffset = byteOffset;\r\n        this.componentType = componentType;\r\n        this.normalized = normalized;\r\n        this.count = count;\r\n        this.type = type;\r\n        this.max = max;\r\n        this.min = min;\r\n        this.sparse = sparse;\r\n        this.name = name;\r\n        this.typedView = undefined;\r\n        this.glBuffer = undefined;\r\n\r\n        this.componentCount = new Map();\r\n        this.componentCount.set(\"SCALAR\", 1);\r\n        this.componentCount.set(\"VEC2\", 2);\r\n        this.componentCount.set(\"VEC3\", 3);\r\n        this.componentCount.set(\"VEC4\", 4);\r\n        this.componentCount.set(\"MAT2\", 4);\r\n        this.componentCount.set(\"MAT3\", 9);\r\n        this.componentCount.set(\"MAT4\", 16);\r\n    }\r\n\r\n    getComponentCount()\r\n    {\r\n        return this.componentCount.get(this.type);\r\n    }\r\n\r\n    getComponentSize()\r\n    {\r\n        switch (this.componentType)\r\n        {\r\n            case gl.BYTE:\r\n            case gl.UNSIGNED_BYTE:\r\n                return 1;\r\n            case gl.SHORT:\r\n            case gl.UNSIGNED_SHORT:\r\n                return 2;\r\n            case gl.UNSIGNED_INT:\r\n            case gl.FLOAT:\r\n                return 4;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    getTypedView(gltf)\r\n    {\r\n        if (this.typedView !== undefined)\r\n        {\r\n            return this.typedView;\r\n        }\r\n\r\n        if (this.bufferView !== undefined)\r\n        {\r\n            let bufferView = gltf.bufferViews[this.bufferView];\r\n            let buffer = gltf.buffers[bufferView.buffer];\r\n            let byteOffset = bufferView.byteOffset;\r\n\r\n            let componentCount = this.getComponentCount();\r\n            if (bufferView.byteStride != 0)\r\n            {\r\n                componentCount = bufferView.byteStride / this.getComponentSize();\r\n            }\r\n\r\n            let arrayOffsetLength = this.byteOffset / this.getComponentSize();\r\n            let arrayLength = arrayOffsetLength + this.count * componentCount;\r\n\r\n            switch (this.componentType)\r\n            {\r\n            case gl.BYTE:\r\n                this.typedView = new Int8Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            case gl.UNSIGNED_BYTE:\r\n                this.typedView = new Uint8Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            case gl.SHORT:\r\n                this.typedView = new Int16Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            case gl.UNSIGNED_SHORT:\r\n                this.typedView = new Uint16Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            case gl.UNSIGNED_INT:\r\n                this.typedView = new Uint32Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            case gl.FLOAT:\r\n                this.typedView = new Float32Array(buffer.buffer, byteOffset, arrayLength);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.typedView === undefined)\r\n        {\r\n            console.warn(\"Failed to convert buffer view to typed view!: \" + this.bufferView);\r\n        }\r\n\r\n        return this.typedView;\r\n    }\r\n\r\n    fromJson(jsonAccessor)\r\n    {\r\n        fromKeys(this, jsonAccessor);\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        if (this.glBuffer !== undefined)\r\n        {\r\n            gl.deleteBuffer(this.glBuffer);\r\n        }\r\n\r\n        this.glBuffer = undefined;\r\n    }\r\n};\r\n\r\nexport { gltfAccessor };\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfBuffer\r\n{\r\n    constructor(uri = undefined, byteLength = undefined, name = undefined)\r\n    {\r\n        this.uri = uri;\r\n        this.byteLength = byteLength;\r\n        this.name = name;\r\n        this.buffer = undefined; // raw data blob\r\n    }\r\n\r\n    fromJson(jsonBuffer)\r\n    {\r\n        fromKeys(this, jsonBuffer);\r\n    }\r\n\r\n    load(gltf, additionalFiles = undefined)\r\n    {\r\n        if (this.buffer !== undefined)\r\n        {\r\n            console.error(\"buffer has already been loaded\");\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n        return new Promise(function(resolve, reject)\r\n        {\r\n            if (!self.setBufferFromFiles(additionalFiles, resolve) &&\r\n                !self.sefBufferFromUri(gltf, resolve))\r\n            {\r\n                console.error(\"Was not able to resolve buffer with uri '%s'\", self.uri);\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    sefBufferFromUri(gltf, callback)\r\n    {\r\n        if (this.uri === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const self = this;\r\n        axios.get(gltf.path + this.uri, { responseType: 'arraybuffer'})\r\n            .then(function(response)\r\n            {\r\n                self.buffer = response.data;\r\n                callback();\r\n            });\r\n        return true;\r\n    }\r\n\r\n    setBufferFromFiles(files, callback)\r\n    {\r\n        if (this.uri === undefined || files === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let bufferFile;\r\n        for (bufferFile of files)\r\n        {\r\n            if (bufferFile.name === this.uri)\r\n            {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (bufferFile.name !== this.uri)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const self = this;\r\n        const reader = new FileReader();\r\n        reader.onloadend = function(event)\r\n        {\r\n            self.buffer = event.target.result;\r\n            callback();\r\n        };\r\n        reader.readAsArrayBuffer(bufferFile);\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport { gltfBuffer };\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfBufferView\r\n{\r\n    constructor(buffer = undefined,\r\n                byteOffset = 0, byteLength = undefined, byteStride = 0,\r\n                target = undefined, name = undefined)\r\n    {\r\n        this.buffer = buffer;\r\n        this.byteOffset = byteOffset;\r\n        this.byteLength = byteLength;\r\n        this.byteStride = byteStride;\r\n        this.target = target;\r\n        this.name = name;\r\n    }\r\n\r\n    fromJson(jsonBufferView)\r\n    {\r\n        fromKeys(this, jsonBufferView);\r\n    }\r\n};\r\n\r\nexport { gltfBufferView };\r\n","import { mat4, vec3 } from 'gl-matrix';\r\nimport { fromKeys } from './utils.js';\r\n\r\nclass gltfCamera\r\n{\r\n    constructor(type = \"perspective\",\r\n                znear = 0.01, zfar = 10000.0,\r\n                yfov = 45.0 * Math.PI / 180.0,\r\n                aspectRatio = 16.0 / 9.0,\r\n                xmag = 1.0, ymag = 1.0,\r\n                name = undefined,\r\n                node = undefined)\r\n    {\r\n        this.type = type;\r\n        this.znear = znear;\r\n        this.zfar = zfar;\r\n        this.yfov = yfov; // radians\r\n        this.xmag = xmag;\r\n        this.ymag = ymag;\r\n        this.aspectRatio = aspectRatio;\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n\r\n    clone()\r\n    {\r\n        return gltfCamera(this.type, this.znear, this.zfar, this.yfov, this.aspectRatio, this.xmag, this.ymag, this.name, this.node);\r\n    }\r\n\r\n    getProjectionMatrix()\r\n    {\r\n        let proj = mat4.create();\r\n\r\n        if (this.type == \"perspective\")\r\n        {\r\n            mat4.perspective(proj, this.yfov, this.aspectRatio, this.znear, this.zfar);\r\n        }\r\n        else if (this.type == \"orthographic\")\r\n        {\r\n            proj[0]  = 1.0 / this.xmag;\r\n            proj[5]  = 1.0 / this.ymag;\r\n            proj[10] = 2.0 / (this.znear / this.zfar)\r\n            proj[14] = (this.zfar + this.znear) / (this.znear - this.zfar);\r\n        }\r\n\r\n        return proj;\r\n    }\r\n\r\n    getViewMatrix(gltf)\r\n    {\r\n        if(this.node !== undefined && gltf !== undefined)\r\n        {\r\n            // TODO: Avoid depending on global variables.\r\n            const node = gltf.nodes[currentCamera.node];\r\n            return mat4.clone(node.worldTransform);\r\n        }\r\n\r\n        return mat4.create();\r\n    }\r\n\r\n    getPosition(gltf)\r\n    {\r\n        let pos = vec3.create();\r\n        mat4.getTranslation(pos, this.getViewMatrix(gltf));\r\n    }\r\n\r\n    fromJson(jsonCamera)\r\n    {\r\n        this.name = name;\r\n        if(jsonCamera.perspective !== undefined)\r\n        {\r\n            this.type = \"perspective\";\r\n            fromKeys(this, jsonCamera.perspective);\r\n        }\r\n        else if(jsonCamera.orthographic !== undefined)\r\n        {\r\n            this.type = \"orthographic\";\r\n            fromKeys(this, jsonCamera.orthographic);\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfCamera };\r\n","/**\r\n * hdrpng.js - support for Radiance .HDR and RGBE / RGB9_E5 images in PNG.\r\n * @author Enki\r\n * @desc load/save Radiance .HDR, RGBE in PNG and RGB9_E5 in PNG for HTML5, webGL, webGL2.\r\n */\r\n\r\n/**\r\n * HDRImage - wrapper that exposes default Image like interface for HDR imgaes. (till extending HTMLCanvasElement actually works ..)\r\n * @returns {HDRImage} a html HDR image element\r\n */\r\nfunction HDRImage() {\r\n  var res = document.createElement('canvas'), HDRsrc='t',HDRexposure=1.0,HDRgamma=2.2,HDRdata=null,context,HDRD;\r\n  res.__defineGetter__('exposure',function(){return HDRexposure});\r\n  res.__defineSetter__('exposure',function(val){ HDRexposure=val; if (HDRdata) { rgbeToLDR(HDRdata,HDRexposure,HDRgamma,HDRD.data); context.putImageData(HDRD,0,0); }});\r\n  res.__defineGetter__('gamma',function(){return HDRgamma});\r\n  res.__defineSetter__('gamma',function(val){ HDRgamma=val; if (HDRdata) { rgbeToLDR(HDRdata,HDRexposure,HDRgamma,HDRD.data); context.putImageData(HDRD,0,0); }});\r\n  res.__defineGetter__('dataFloat',function(){ return rgbeToFloat(HDRdata); });\r\n  res.__defineGetter__('dataRGBE',function(){ return HDRdata; });\r\n  res.toHDRBlob = function(cb,m,q) {\r\n    // Array to image.. slightly more involved.\r\n      function createShader(gl, source, type) {\r\n          var shader = gl.createShader(type);\r\n          gl.shaderSource(shader, source);\r\n          gl.compileShader(shader);\r\n          return shader;\r\n      }\r\n      function createProgram(gl, vertexShaderSource, fragmentShaderSource) {\r\n          var program = gl.createProgram(),vs,fs;\r\n          gl.attachShader(program, vs=createShader(gl, vertexShaderSource, gl.VERTEX_SHADER));\r\n          gl.attachShader(program, fs=createShader(gl, fragmentShaderSource, gl.FRAGMENT_SHADER));\r\n          gl.linkProgram(program); gl.deleteShader(vs); gl.deleteShader(fs);\r\n          return program;\r\n      };\r\n      var ar = (m && m.match(/rgb9_e5/i)) ? new Uint8Array( floatToRgb9_e5(rgbeToFloat(HDRdata)).buffer ) : new Uint8Array(HDRdata.buffer);\r\n      var vs2='precision highp float;\\nattribute vec3 position;\\nvarying vec2 tex;\\nvoid main() { tex = position.xy/2.0+0.5; gl_Position = vec4(position, 1.0); }';\r\n      var fs2='precision highp float;\\nprecision highp sampler2D;\\nuniform sampler2D tx;\\nvarying vec2 tex;\\nvoid main() { gl_FragColor = texture2D(tx,tex); }';\r\n      var x = this.width, y = this.height;\r\n      if (x*y*4 < ar.byteLength) return console.error('not big enough.');\r\n      var c = document.createElement('canvas');\r\n      c.width=x; c.height=y;\r\n      var gl = c.getContext('webgl',{antialias:false,alpha:true,premultipliedAlpha:false,preserveDrawingBuffer:true});\r\n\r\n      var texture = gl.createTexture();\r\n      gl.activeTexture(gl.TEXTURE0);  gl.bindTexture(gl.TEXTURE_2D, texture);  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,true);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, x, y, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(ar.buffer));\r\n\r\n      var program = createProgram(gl, vs2, fs2), uniformTexLocation = gl.getUniformLocation(program, 'tx');\r\n\r\n      var positions = new Float32Array([-1, -1, 0, 1, -1, 0, 1,  1, 0, 1,  1, 0, -1,  1, 0, -1, -1, 0 ]), vertexPosBuffer=gl.createBuffer();\r\n      gl.enableVertexAttribArray(0);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n      gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\r\n\r\n      gl.useProgram(program);\r\n      gl.uniform1i(uniformTexLocation, 0);\r\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n      gl.deleteTexture(texture);\r\n      gl.deleteProgram(program);\r\n\r\n      if (cb) return c.toBlob(cb);\r\n  }\r\n  res.__defineGetter__('src',function(){return HDRsrc});\r\n  res.__defineSetter__('src',function(val){\r\n    HDRsrc=val;\r\n    context&&context.clearRect(0,0,this.width,this.height);\r\n    if (val.match(/\\.hdr$/i)) loadHDR(val,function(img,width,height){\r\n      HDRdata = img;\r\n      this.width  = this.style.width  = width;\r\n      this.height = this.style.height = height;\r\n      context = this.getContext('2d');\r\n      HDRD = context.getImageData(0,0,width,height);\r\n      rgbeToLDR(img,HDRexposure,HDRgamma,HDRD.data);\r\n      context.putImageData(HDRD,0,0);\r\n      this.onload&&this.onload();\r\n    }.bind(res));\r\n    else if (val.match(/\\.rgb9_e5\\.png$/i)) {\r\n      var i = new Image();\r\n      i.src = val;\r\n      i.onload = function() {\r\n        var c = document.createElement('canvas'), x=this.width=this.style.width=c.width=i.width, y=this.height=this.style.height=c.height=i.height, gl=c.getContext('webgl');\r\n\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, i);\r\n\r\n        fb = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n        gl.framebufferTexture2D( gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        var res = new Uint8Array(x*y*4);\r\n        gl.readPixels(0,0,x,y,gl.RGBA,gl.UNSIGNED_BYTE,res);\r\n\r\n        gl.deleteTexture(texture);\r\n        gl.deleteFramebuffer(fb);\r\n\r\n        this.dataRAW = new Uint32Array(res.buffer);\r\n        HDRdata = floatToRgbe(rgb9_e5ToFloat(this.dataRAW));\r\n        context = this.getContext('2d');\r\n        HDRD = context.getImageData(0,0,x,y);\r\n        rgbeToLDR(HDRdata,HDRexposure,HDRgamma,HDRD.data);\r\n        context.putImageData(HDRD,0,0);\r\n        this.onload&&this.onload();\r\n      }.bind(res);\r\n    } else if (val.match(/\\.hdr\\.png$|\\.rgbe\\.png/i)) {\r\n      var i = new Image();\r\n      i.src = val;\r\n      i.onload = function() {\r\n        var c = document.createElement('canvas'), x=this.width=this.style.width=c.width=i.width, y=this.height=this.style.height=c.height=i.height, gl=c.getContext('webgl');\r\n\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, i);\r\n\r\n        fb = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n        gl.framebufferTexture2D( gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        var res = new Uint8Array(x*y*4);\r\n        gl.readPixels(0,0,x,y,gl.RGBA,gl.UNSIGNED_BYTE,res);\r\n\r\n        gl.deleteTexture(texture);\r\n        gl.deleteFramebuffer(fb);\r\n\r\n        HDRdata = res;\r\n        context = this.getContext('2d');\r\n        HDRD = context.getImageData(0,0,x,y);\r\n        rgbeToLDR(HDRdata,HDRexposure,HDRgamma,HDRD.data);\r\n        context.putImageData(HDRD,0,0);\r\n        this.onload&&this.onload();\r\n      }.bind(res);\r\n    }\r\n  });\r\n  return res;\r\n}\r\n\r\nfunction m(a,b) { for (var i in b) a[i]=b[i]; return a; };\r\n\r\n/** Load and parse a Radiance .HDR file. It completes with a 32bit RGBE buffer.\r\n  * @param {URL} url location of .HDR file to load.\r\n  * @param {function} completion completion callback.\r\n  * @returns {XMLHttpRequest} the XMLHttpRequest used to download the file.\r\n  */\r\nfunction loadHDR( url, completion ) {\r\n  var req = m(new XMLHttpRequest(),{responseType:\"arraybuffer\"});\r\n  req.onerror = completion.bind(req,false);\r\n  req.onload  = function() {\r\n    if (this.status>=400) return this.onerror();\r\n    var header='',pos=0,d8=new Uint8Array(this.response),format;\r\n  // read header.\r\n    while (!header.match(/\\n\\n[^\\n]+\\n/g)) header += String.fromCharCode(d8[pos++]);\r\n  // check format.\r\n    format = header.match(/FORMAT=(.*)$/m)[1];\r\n    if (format!='32-bit_rle_rgbe') return console.warn('unknown format : '+format),this.onerror();\r\n  // parse resolution\r\n    var rez=header.split(/\\n/).reverse()[1].split(' '), width=rez[3]*1, height=rez[1]*1;\r\n  // Create image.\r\n    var img=new Uint8Array(width*height*4),ipos=0;\r\n  // Read all scanlines\r\n    for (var j=0; j<height; j++) {\r\n      var scanline = [];\r\n\r\n      var rgbe = d8.slice(pos, pos+=4);\r\n      const isNewRLE = (rgbe[0] == 2 && rgbe[1] == 2 && rgbe[2] == ((width >> 8) & 0xFF) && rgbe[3] == (width & 0xFF));\r\n\r\n      if (isNewRLE && (width >= 8) && (width < 32768))\r\n      {\r\n        for (var i=0; i < 4; i++)\r\n        {\r\n            var ptr = i*width, ptr_end = (i+1)*width, buf, count;\r\n            while (ptr<ptr_end)\r\n            {\r\n                buf = d8.slice(pos, pos+=2);\r\n                if (buf[0] > 128)\r\n                {\r\n                  count = buf[0]-128;\r\n                  while(count-- > 0) scanline[ptr++] = buf[1];\r\n                }\r\n                else\r\n                {\r\n                  count = buf[0]-1;\r\n                  scanline[ptr++]=buf[1];\r\n                  while(count-- > 0) scanline[ptr++] = d8[pos++];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i=0;i<width;i++)\r\n        {\r\n          img[ipos++] = scanline[i+0*width];\r\n          img[ipos++] = scanline[i+1*width];\r\n          img[ipos++] = scanline[i+2*width];\r\n          img[ipos++] = scanline[i+3*width];\r\n        }\r\n      }\r\n      else\r\n      {\r\n        pos -= 4;\r\n\r\n        for (var i = 0; i < width; i++)\r\n        {\r\n          rgbe = d8.slice(pos, pos += 4);\r\n\r\n          img[ipos++] = rgbe[0];\r\n          img[ipos++] = rgbe[1];\r\n          img[ipos++] = rgbe[2];\r\n          img[ipos++] = rgbe[3];\r\n        }\r\n      }\r\n    }\r\n    completion&&completion(img,width,height);\r\n  }\r\n  req.open(\"GET\",url,true);\r\n  req.send(null);\r\n  return req;\r\n}\r\n\r\n/** Convert a float buffer to a RGB9_E5 buffer. (ref https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_shared_exponent.txt)\r\n  * @param {Float32Array} Buffer Floating point input buffer (96 bits/pixel).\r\n  * @param {Uint32Array} [res] Optional output buffer with 32 bit RGB9_E5 per pixel.\r\n  * @returns {Uint32Array} A 32bit uint32 array in RGB9_E5\r\n  */\r\nfunction floatToRgb9_e5(buffer,res) {\r\n  var r,g,b,v,maxColor,ExpShared,denom,s,l=(buffer.byteLength/12)|0, res=res||new Uint32Array(l);\r\n  for (var i=0;i<l;i++) {\r\n    r=Math.min(32768.0,buffer[i*3]); g=Math.min(32768.0,buffer[i*3+1]); b=Math.min(32768.0,buffer[i*3+2]);\r\n    maxColor = Math.max(Math.max(r,g),b);\r\n    ExpShared = Math.max(-16,Math.floor(Math.log2(maxColor))) + 16;\r\n    denom = Math.pow(2,ExpShared-24);\r\n    if (Math.floor(maxColor/denom+0.5) == 511) { denom *= 2; ExpShared += 1; }\r\n    res[i] = (Math.floor(r/denom+0.5)<<23)+(Math.floor(g/denom+0.5)<<14)+(Math.floor(b/denom+0.5)<<5)+ (ExpShared|0);\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert an RGB9_E5 buffer to a Float buffer.\r\n  * @param {Uint32Array} Buffer in RGB9_E5 format. (Uint32 buffer).\r\n  * @param {Float32Array} [res] Optional float output buffer.\r\n  * @returns {Float32Array} A Float32Array.\r\n  */\r\nfunction rgb9_e5ToFloat(buffer,res) {\r\n  var v,s,l=buffer.byteLength>>2, res=res||new Float32Array(l*3);\r\n  for (var i=0;i<l;i++) {\r\n    v = buffer[i]; s = Math.pow(2,(v&31)-24);\r\n    res[i*3]   =  (v>>>23)*s;\r\n    res[i*3+1] = ((v>>>14)&511)*s;\r\n    res[i*3+2] = ((v>>>5)&511)*s;\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert a float buffer to a RGBE buffer.\r\n  * @param {Float32Array} Buffer Floating point input buffer (96 bits/pixel).\r\n  * @param {Uint8Array} [res] Optional output buffer with 32 bit RGBE per pixel.\r\n  * @returns {Uint8Array} A 32bit uint8 array in RGBE\r\n  */\r\nfunction floatToRgbe(buffer,res) {\r\n  var r,g,b,v,s,l=(buffer.byteLength/12)|0, res=res||new Uint8Array(l*4);\r\n  for (var i=0;i<l;i++) {\r\n    r = buffer[i*3]; g = buffer[i*3+1]; b = buffer[i*3+2];\r\n    v = Math.max(Math.max(r,g),b); e = Math.ceil(Math.log2(v)); s = Math.pow(2,e-8);\r\n    res[i*4]   = (r/s)|0;\r\n    res[i*4+1] = (g/s)|0;\r\n    res[i*4+2] = (b/s)|0;\r\n    res[i*4+3] = (e+128);\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert an RGBE buffer to a Float buffer.\r\n  * @param {Uint8Array} buffer The input buffer in RGBE format. (as returned from loadHDR)\r\n  * @param {Float32Array} [res] Optional result buffer containing 3 floats per pixel.\r\n  * @returns {Float32Array} A floating point buffer with 96 bits per pixel (32 per channel, 3 channels).\r\n  */\r\nfunction rgbeToFloat(buffer,res) {\r\n  var s,l=buffer.byteLength>>2, res=res||new Float32Array(l*3);\r\n  for (var i=0;i<l;i++) {\r\n    s = Math.pow(2,buffer[i*4+3]-(128+8));\r\n    res[i*3]=buffer[i*4]*s;\r\n    res[i*3+1]=buffer[i*4+1]*s;\r\n    res[i*3+2]=buffer[i*4+2]*s;\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert an RGBE buffer to LDR with given exposure and display gamma.\r\n  * @param {Uint8Array} buffer The input buffer in RGBE format. (as returned from loadHDR)\r\n  * @param {float} [exposure=1] Optional exposure value. (1=default, 2=1 step up, 3=2 steps up, -2 = 3 steps down)\r\n  * @param {float} [gamma=2.2]  Optional display gamma to respect. (1.0 = linear, 2.2 = default monitor)\r\n  * @param {Array} [res] res Optional result buffer.\r\n  */\r\nfunction rgbeToLDR(buffer,exposure,gamma,res) {\r\n  exposure = Math.pow(2,exposure===undefined?1:exposure)/2;\r\n  if (gamma===undefined) gamma = 2.2;\r\n  var one_over_gamma=1/gamma,s,l=buffer.byteLength>>2, res=res||new Uint8ClampedArray(l*4);\r\n  for (var i=0;i<l;i++) {\r\n    s = exposure * Math.pow(2,buffer[i*4+3]-(128+8));\r\n    res[i*4]  =255*Math.pow(buffer[i*4]*s,one_over_gamma);\r\n    res[i*4+1]=255*Math.pow(buffer[i*4+1]*s,one_over_gamma);\r\n    res[i*4+2]=255*Math.pow(buffer[i*4+2]*s,one_over_gamma);\r\n    res[i*4+3]=255;\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert an float buffer to LDR with given exposure and display gamma.\r\n  * @param {Float32Array} buffer The input buffer in floating point format.\r\n  * @param {float} [exposure=1] Optional exposure value. (1=default, 2=1 step up, 3=2 steps up, -2 = 3 steps down)\r\n  * @param {float} [gamma=2.2]  Optional display gamma to respect. (1.0 = linear, 2.2 = default monitor)\r\n  * @param {Array} [res] res Optional result buffer.\r\n  */\r\nfunction floatToLDR(buffer,exposure,gamma,res) {\r\n  exposure = Math.pow(2,exposure===undefined?1:exposure)/2;\r\n  if (gamma===undefined) gamma = 2.2;\r\n  var one_over_gamma=1/gamma,s,l=(buffer.byteLength/12)|0, res=res||new Uint8ClampedArray(l*4);\r\n  for (var i=0;i<l;i++) {\r\n    res[i*4]  =255*Math.pow(buffer[i*3]*exposure,one_over_gamma);\r\n    res[i*4+1]=255*Math.pow(buffer[i*3+1]*exposure,one_over_gamma);\r\n    res[i*4+2]=255*Math.pow(buffer[i*3+2]*exposure,one_over_gamma);\r\n    res[i*4+3]=255;\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\n// Float/RGBE conversions.\r\nHDRImage.floatToRgbe = floatToRgbe;\r\nHDRImage.rgbeToFloat = rgbeToFloat;\r\n\r\n// Float/RGB9_E5 conversions.\r\nHDRImage.floatToRgb9_e5 = floatToRgb9_e5;\r\nHDRImage.rgb9_e5ToFloat = rgb9_e5ToFloat;\r\n\r\n// x to LDR conversion.\r\nHDRImage.rgbeToLDR   = rgbeToLDR;\r\nHDRImage.floatToLDR  = floatToLDR;\r\n\r\n\r\nexport { HDRImage };\r\n","import { HDRImage } from '../libs/hdrpng.js';\r\nimport { fromKeys } from './utils.js';\r\n\r\nconst ImageMimeType = {JPEG: \"image/jpeg\", HDR: \"image/vnd.radiance\"};\r\n\r\nclass gltfImage\r\n{\r\n    constructor(uri = undefined, type = gl.TEXTURE_2D, miplevel = 0, bufferView = undefined, name = undefined, mimeType = ImageMimeType.JPEG, image = undefined)\r\n    {\r\n        this.uri = uri;\r\n        this.bufferView = bufferView;\r\n        this.mimeType = mimeType;\r\n        this.image = image; // javascript image\r\n        if (this.image !== undefined)\r\n        {\r\n            this.image.crossOrigin = \"\";\r\n        }\r\n        this.name = name;\r\n        this.type = type; // nonstandard\r\n        this.miplevel = miplevel; // nonstandard\r\n    }\r\n\r\n    fromJson(jsonImage, path = \"\")\r\n    {\r\n        fromKeys(this, jsonImage);\r\n\r\n        if(this.uri !== undefined)\r\n        {\r\n            this.uri = path + this.uri;\r\n        }\r\n    }\r\n\r\n    load(gltf, additionalFiles = undefined)\r\n    {\r\n        if (this.image !== undefined)\r\n        {\r\n            console.error(\"image has already been loaded\");\r\n            return;\r\n        }\r\n\r\n        this.image = this.mimeType === ImageMimeType.HDR ? new HDRImage() : new Image();\r\n        this.image.crossOrigin = \"\";\r\n        const self = this;\r\n        const promise = new Promise(function(resolve, reject)\r\n        {\r\n            self.image.onload = resolve;\r\n            self.image.onerror = resolve;\r\n\r\n            if (!self.setImageFromBufferView(gltf) &&\r\n                !self.setImageFromFiles(additionalFiles) &&\r\n                !self.setImageFromUri())\r\n            {\r\n                console.error(\"Was not able to resolve image with uri '%s'\", self.uri);\r\n                resolve();\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    setImageFromUri()\r\n    {\r\n        if (this.uri === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        this.image.src = this.uri;\r\n        return true;\r\n    }\r\n\r\n    setImageFromBufferView(gltf)\r\n    {\r\n        const view = gltf.bufferViews[this.bufferView];\r\n        if (view === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const buffer = gltf.buffers[view.buffer].buffer;\r\n        const array = new Uint8Array(buffer, view.byteOffset, view.byteLength);\r\n        const blob = new Blob([array], { \"type\": this.mimeType });\r\n        this.image.src = URL.createObjectURL(blob);\r\n        return true;\r\n    }\r\n\r\n    setImageFromFiles(files)\r\n    {\r\n        if (this.uri === undefined || files === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let bufferFile;\r\n        for (bufferFile of files)\r\n        {\r\n            if (bufferFile.name === this.uri)\r\n            {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (bufferFile.name !== this.uri)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        const self = this;\r\n        reader.onloadend = function(event)\r\n        {\r\n            self.image.src = event.target.result;\r\n        }\r\n        reader.readAsDataURL(bufferFile);\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport { gltfImage, ImageMimeType };\r\n","import { mat4, vec2, vec3, quat } from 'gl-matrix';\r\nimport { fromKeys, jsToGl, UniformStruct } from './utils.js';\r\n\r\nclass gltfLight\r\n{\r\n    constructor(type = \"directional\",\r\n                color = [1, 1, 1],\r\n                intensity = 1,\r\n                innerConeAngle = 0.0,\r\n                outerConeAngle = Math.PI / 4.0,\r\n                range = -1.0, // if no range is defined in the json, this is the default the shader understands\r\n                name = undefined,\r\n                node = undefined)\r\n    {\r\n        this.type = type;\r\n        this.color = color;\r\n        this.intensity = intensity;\r\n        this.innerConeAngle = innerConeAngle;\r\n        this.outerConeAngle = outerConeAngle;\r\n        this.range = range;\r\n        this.name = name;\r\n        this.node = node; // non-standard\r\n    }\r\n\r\n    fromJson(jsonLight)\r\n    {\r\n        fromKeys(this, jsonLight);\r\n    }\r\n\r\n    toUniform(gltf)\r\n    {\r\n        let uLight = new UniformLight();\r\n\r\n        if (this.node !== undefined)\r\n        {\r\n            let transform = gltf.nodes[this.node].worldTransform;\r\n            let rotation = quat.create();\r\n            let alongNegativeZ = vec3.fromValues(0, 0, -1);\r\n            mat4.getRotation(rotation, transform);\r\n            vec3.transformQuat(uLight.direction, alongNegativeZ, rotation);\r\n            mat4.getTranslation(uLight.position, transform);\r\n        }\r\n\r\n        uLight.range = this.range;\r\n        uLight.color = jsToGl(this.color);\r\n        uLight.intensity = this.intensity;\r\n\r\n        uLight.innerConeCos = Math.cos(this.innerConeAngle);\r\n        uLight.outerConeCos = Math.cos(this.outerConeAngle);\r\n\r\n        switch(this.type)\r\n        {\r\n            case \"spot\":\r\n                uLight.type = Type_Spot;\r\n                break;\r\n            case \"point\":\r\n                uLight.type = Type_Point;\r\n                break;\r\n            case \"directional\":\r\n            default:\r\n                uLight.type = Type_Directional;\r\n                break;\r\n        }\r\n\r\n        return uLight;\r\n    }\r\n}\r\n\r\nconst Type_Directional = 0;\r\nconst Type_Point = 1;\r\nconst Type_Spot = 2;\r\n\r\nclass UniformLight extends UniformStruct\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        const defaultDirection = vec3.fromValues(-0.7399, -0.6428, -0.1983);\r\n        this.direction = defaultDirection;\r\n        this.range = -1.0;\r\n\r\n        this.color = jsToGl([1, 1, 1]);\r\n        this.intensity = 1.0;\r\n\r\n        this.position = jsToGl([0, 0, 0]);\r\n        this.innerConeCos = 0.0;\r\n\r\n        this.outerConeCos = Math.PI / 4.0;\r\n        this.type = Type_Directional;\r\n        this.padding = vec2.create();\r\n    }\r\n}\r\n\r\nexport { gltfLight };\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfTexture\r\n{\r\n    constructor(sampler = undefined, source = undefined, type = gl.TEXTURE_2D, texture = undefined)\r\n    {\r\n        this.sampler = sampler; // index to gltfSampler, default sampler ?\r\n        this.source = source; // index to gltfImage\r\n        this.glTexture = texture; // gl texture\r\n        this.initialized = false;\r\n        this.type = type;\r\n    }\r\n\r\n    fromJson(jsonTexture, defaultSampler)\r\n    {\r\n        fromKeys(this, jsonTexture);\r\n\r\n        if (this.sampler === undefined)\r\n        {\r\n            this.sampler = defaultSampler;\r\n        }\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        if (this.glTexture !== undefined)\r\n        {\r\n            gl.deleteTexture(this.glTexture);\r\n        }\r\n\r\n        this.glTexture = undefined;\r\n    }\r\n};\r\n\r\nclass gltfTextureInfo\r\n{\r\n    constructor(index = undefined, texCoord = 0, colorSpace = gl.RGBA, samplerName = \"\", generateMips = true) // linear by default\r\n    {\r\n        this.index = index; // reference to gltfTexture\r\n        this.texCoord = texCoord; // which UV set to use\r\n        this.colorSpace = colorSpace;\r\n        this.samplerName = samplerName;\r\n        this.strength = 1.0; // occlusion\r\n        this.scale = 1.0; // normal\r\n        this.generateMips = generateMips;\r\n\r\n        this.extensions = undefined;\r\n    }\r\n\r\n    fromJson(jsonTextureInfo, samplerName, colorSpace = gl.RGBA)\r\n    {\r\n        fromKeys(this, jsonTextureInfo);\r\n\r\n        this.colorSpace = colorSpace;\r\n        this.samplerName = samplerName;\r\n    }\r\n};\r\n\r\nexport { gltfTexture, gltfTextureInfo };\r\n","import { mat3 } from 'gl-matrix';\r\nimport { gltfTextureInfo } from './texture.js';\r\nimport { fromKeys, jsToGl } from './utils.js';\r\n\r\nclass gltfMaterial\r\n{\r\n    constructor(emissiveFactor = jsToGl([0, 0, 0]), alphaMode = \"OPAQUE\", alphaCutoff = 0.5, doubleSided = false,\r\n                baseColorFactor = jsToGl([1, 1, 1, 1]), metallicFactor = 1.0, roughnessFactor = 1.0, // Metallic-Roughness\r\n                diffuseFactor = jsToGl([1, 1, 1, 1]), specularFactor = jsToGl([1, 1, 1]), glossinessFactor = 1.0, // Specular Glossiness\r\n                name = undefined)\r\n    {\r\n        this.textures = []; // array of gltfTextureInfos\r\n        this.emissiveFactor = emissiveFactor;\r\n        this.alphaMode = alphaMode;\r\n        this.alphaCutoff = alphaCutoff;\r\n        this.doubleSided = doubleSided;\r\n        this.name = name;\r\n        this.type = \"unlit\";\r\n\r\n        this.metallicFactor = metallicFactor;\r\n        this.roughnessFactor = roughnessFactor;\r\n        this.baseColorFactor = baseColorFactor;\r\n\r\n        this.diffuseFactor = diffuseFactor;\r\n        this.specularFactor = specularFactor;\r\n        this.glossinessFactor = glossinessFactor;\r\n\r\n        this.properties = new Map();\r\n        this.defines = [];\r\n    }\r\n\r\n    static getDefaults()\r\n    {\r\n        let defaultMaterial = new gltfMaterial();\r\n        defaultMaterial.type = \"MR\";\r\n        defaultMaterial.name = \"Default Material\";\r\n        defaultMaterial.properties.set(\"u_BaseColorFactor\", defaultMaterial.baseColorFactor);\r\n        defaultMaterial.properties.set(\"u_MetallicFactor\", defaultMaterial.metallicFactor);\r\n        defaultMaterial.properties.set(\"u_RoughnessFactor\", defaultMaterial.roughnessFactor);\r\n        return defaultMaterial;\r\n    }\r\n\r\n    getShaderIdentifier()\r\n    {\r\n        switch (this.type)\r\n        {\r\n            default:\r\n            case \"SG\": // fall through till we sparate shaders\r\n            case \"MR\": return \"metallic-roughness.frag\";\r\n            //case \"SG\": return \"specular-glossiness.frag\" ;\r\n        }\r\n    }\r\n\r\n    getDefines()\r\n    {\r\n        return this.defines;\r\n    }\r\n\r\n    getProperties()\r\n    {\r\n        return this.properties;\r\n    }\r\n\r\n    getTextures()\r\n    {\r\n        return this.textures;\r\n    }\r\n\r\n    parseTextureInfoExtensions(textureInfo, textureKey)\r\n    {\r\n        if(textureInfo.extensions === undefined)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(textureInfo.extensions.KHR_texture_transform !== undefined)\r\n        {\r\n            const uvTransform = textureInfo.extensions.KHR_texture_transform;\r\n\r\n            // override uvset\r\n            if(uvTransform.texCoord !== undefined)\r\n            {\r\n                textureInfo.texCoord = uvTransform.texCoord;\r\n            }\r\n\r\n            let rotation = mat3.create();\r\n            let scale = mat3.create();\r\n            let translation = mat3.create();\r\n\r\n            if(uvTransform.rotation !== undefined)\r\n            {\r\n                const s =  Math.sin(uvTransform.rotation);\r\n                const c =  Math.cos(uvTransform.rotation);\r\n\r\n                rotation = jsToGl([\r\n                    c, s, 0.0,\r\n                    -s, c, 0.0,\r\n                    0.0, 0.0, 1.0]);\r\n            }\r\n\r\n            if(uvTransform.scale !== undefined)\r\n            {\r\n                scale = jsToGl([uvTransform.scale[0],0,0, 0,uvTransform.scale[1],0, 0,0,1]);\r\n            }\r\n\r\n            if(uvTransform.offset !== undefined)\r\n            {\r\n                translation = jsToGl([1,0,uvTransform.offset[0], 0,1,uvTransform.offset[1], 0, 0, 1]);\r\n            }\r\n\r\n            let uvMatrix = mat3.create();\r\n            mat3.multiply(uvMatrix, rotation, scale);\r\n            mat3.multiply(uvMatrix, uvMatrix, translation);\r\n\r\n            this.defines.push(\"HAS_\" + textureKey.toUpperCase() + \"_UV_TRANSFORM 1\");\r\n            this.properties.set(\"u_\" + textureKey + \"UVTransform\", uvMatrix);\r\n        }\r\n    }\r\n\r\n    fromJson(jsonMaterial)\r\n    {\r\n        fromKeys(this, jsonMaterial);\r\n        // i.e. alphaMode + alphaCutoff, doubleSided.\r\n\r\n        if (jsonMaterial.emissiveFactor !== undefined)\r\n        {\r\n            this.emissiveFactor = jsToGl(jsonMaterial.emissiveFactor);\r\n        }\r\n\r\n        if (jsonMaterial.normalTexture !== undefined)\r\n        {\r\n            let normalTexture = new gltfTextureInfo();\r\n            normalTexture.fromJson(jsonMaterial.normalTexture,\"u_NormalSampler\");\r\n            this.parseTextureInfoExtensions(normalTexture, \"Normal\");\r\n            this.textures.push(normalTexture);\r\n            this.defines.push(\"HAS_NORMAL_MAP 1\");\r\n            this.properties.set(\"u_NormalScale\", normalTexture.scale);\r\n            this.properties.set(\"u_NormalUVSet\", normalTexture.texCoord);\r\n        }\r\n\r\n        if (jsonMaterial.occlusionTexture !== undefined)\r\n        {\r\n            let occlusionTexture = new gltfTextureInfo();\r\n            occlusionTexture.fromJson(jsonMaterial.occlusionTexture,\"u_OcclusionSampler\");\r\n            this.parseTextureInfoExtensions(occlusionTexture, \"Occlusion\");\r\n            this.textures.push(occlusionTexture);\r\n            this.defines.push(\"HAS_OCCLUSION_MAP 1\");\r\n            this.properties.set(\"u_OcclusionStrength\", occlusionTexture.strength);\r\n            this.properties.set(\"u_OcclusionUVSet\", occlusionTexture.texCoord);\r\n        }\r\n\r\n        if (jsonMaterial.emissiveTexture !== undefined)\r\n        {\r\n            let emissiveTexture = new gltfTextureInfo();\r\n            emissiveTexture.fromJson(jsonMaterial.emissiveTexture,\"u_EmissiveSampler\");\r\n            this.parseTextureInfoExtensions(emissiveTexture, \"Emissive\");\r\n            this.textures.push(emissiveTexture);\r\n            this.defines.push(\"HAS_EMISSIVE_MAP 1\");\r\n            this.properties.set(\"u_EmissiveFactor\", this.emissiveFactor);\r\n            this.properties.set(\"u_EmissiveUVSet\", emissiveTexture.texCoord);\r\n        }\r\n\r\n        if(this.alphaMode === 'MASK') // only set cutoff value for mask material\r\n        {\r\n            this.defines.push(\"ALPHAMODE_MASK 1\");\r\n            this.properties.set(\"u_AlphaCutoff\", this.alphaCutoff);\r\n        }\r\n\r\n        if(jsonMaterial.extensions !== undefined)\r\n        {\r\n            this.fromJsonMaterialExtensions(jsonMaterial.extensions);\r\n        }\r\n\r\n        // dont do MR if we parsed SG before\r\n        if (jsonMaterial.pbrMetallicRoughness !== undefined && this.type != \"SG\")\r\n        {\r\n            this.type = \"MR\";\r\n            this.fromJsonMetallicRoughness(jsonMaterial.pbrMetallicRoughness);\r\n        }\r\n    }\r\n\r\n    fromJsonMaterialExtensions(jsonExtensions)\r\n    {\r\n        if (jsonExtensions.KHR_materials_pbrSpecularGlossiness !== undefined)\r\n        {\r\n            this.type = \"SG\";\r\n            this.fromJsonSpecularGlossiness(jsonExtensions.KHR_materials_pbrSpecularGlossiness);\r\n        }\r\n\r\n        if(jsonExtensions.KHR_materials_unlit !== undefined)\r\n        {\r\n            this.type = \"unlit\";\r\n            this.defines.push(\"MATERIAL_UNLIT 1\");\r\n        }\r\n    }\r\n\r\n    fromJsonMetallicRoughness(jsonMetallicRoughness)\r\n    {\r\n        this.defines.push(\"MATERIAL_METALLICROUGHNESS 1\");\r\n\r\n        if (jsonMetallicRoughness.baseColorFactor !== undefined)\r\n        {\r\n            this.baseColorFactor = jsToGl(jsonMetallicRoughness.baseColorFactor);\r\n        }\r\n\r\n        if (jsonMetallicRoughness.metallicFactor !== undefined)\r\n        {\r\n            this.metallicFactor = jsonMetallicRoughness.metallicFactor;\r\n        }\r\n\r\n        if (jsonMetallicRoughness.roughnessFactor !== undefined)\r\n        {\r\n            this.roughnessFactor = jsonMetallicRoughness.roughnessFactor;\r\n        }\r\n\r\n        this.properties.set(\"u_BaseColorFactor\", this.baseColorFactor);\r\n        this.properties.set(\"u_MetallicFactor\", this.metallicFactor);\r\n        this.properties.set(\"u_RoughnessFactor\", this.roughnessFactor);\r\n\r\n        if (jsonMetallicRoughness.baseColorTexture !== undefined)\r\n        {\r\n            let baseColorTexture = new gltfTextureInfo();\r\n            baseColorTexture.fromJson(jsonMetallicRoughness.baseColorTexture, \"u_BaseColorSampler\");\r\n            this.parseTextureInfoExtensions(baseColorTexture, \"BaseColor\");\r\n            this.textures.push(baseColorTexture);\r\n            this.defines.push(\"HAS_BASE_COLOR_MAP 1\");\r\n            this.properties.set(\"u_BaseColorUVSet\", baseColorTexture.texCoord);\r\n        }\r\n\r\n        if (jsonMetallicRoughness.metallicRoughnessTexture !== undefined)\r\n        {\r\n            let metallicRoughnessTexture = new gltfTextureInfo();\r\n            metallicRoughnessTexture.fromJson(jsonMetallicRoughness.metallicRoughnessTexture, \"u_MetallicRoughnessSampler\");\r\n            this.parseTextureInfoExtensions(metallicRoughnessTexture, \"MetallicRoughness\");\r\n            this.textures.push(metallicRoughnessTexture);\r\n            this.defines.push(\"HAS_METALLIC_ROUGHNESS_MAP 1\");\r\n            this.properties.set(\"u_MetallicRoughnessUVSet\", metallicRoughnessTexture.texCoord);\r\n        }\r\n    }\r\n\r\n    fromJsonSpecularGlossiness(jsonSpecularGlossiness)\r\n    {\r\n        this.defines.push(\"MATERIAL_SPECULARGLOSSINESS 1\");\r\n\r\n        if (jsonSpecularGlossiness.diffuseFactor !== undefined)\r\n        {\r\n            this.diffuseFactor = jsToGl(jsonSpecularGlossiness.diffuseFactor);\r\n        }\r\n\r\n        if (jsonSpecularGlossiness.specularFactor !== undefined)\r\n        {\r\n            this.specularFactor = jsToGl(jsonSpecularGlossiness.specularFactor);\r\n        }\r\n\r\n        if (jsonSpecularGlossiness.glossinessFactor !== undefined)\r\n        {\r\n            this.glossinessFactor = jsonSpecularGlossiness.glossinessFactor;\r\n        }\r\n\r\n        this.properties.set(\"u_DiffuseFactor\", this.diffuseFactor);\r\n        this.properties.set(\"u_SpecularFactor\", this.specularFactor);\r\n        this.properties.set(\"u_GlossinessFactor\", this.glossinessFactor);\r\n\r\n        if (jsonSpecularGlossiness.diffuseTexture !== undefined)\r\n        {\r\n            let diffuseTexture = new gltfTextureInfo();\r\n            diffuseTexture.fromJson(jsonSpecularGlossiness.diffuseTexture,\"u_DiffuseSampler\");\r\n            this.parseTextureInfoExtensions(diffuseTexture, \"Diffuse\");\r\n            this.textures.push(diffuseTexture);\r\n            this.defines.push(\"HAS_DIFFUSE_MAP 1\");\r\n            this.properties.set(\"u_DiffuseUVSet\", diffuseTexture.texCoord);\r\n        }\r\n\r\n        if (jsonSpecularGlossiness.specularGlossinessTexture !== undefined)\r\n        {\r\n            let specularGlossinessTexture = new gltfTextureInfo();\r\n            specularGlossinessTexture.fromJson(jsonSpecularGlossiness.specularGlossinessTexture,\"u_SpecularGlossinessSampler\");\r\n            this.parseTextureInfoExtensions(specularGlossinessTexture, \"SpecularGlossiness\");\r\n            this.textures.push(specularGlossinessTexture);\r\n            this.defines.push(\"HAS_SPECULAR_GLOSSINESS_MAP 1\");\r\n            this.properties.set(\"u_SpecularGlossinessUVSet\", specularGlossinessTexture.texCoord);\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfMaterial };\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfPrimitive\r\n{\r\n    constructor(attributes = [], indices = undefined, material = undefined, mode = gl.TRIANGLES)\r\n    {\r\n        this.attributes = attributes;\r\n        this.indices = indices;\r\n        this.material = material;\r\n        this.mode = mode;\r\n        this.defines = [];\r\n        this.skip = true;\r\n    }\r\n\r\n    fromJson(jsonPrimitive, defaultMaterial, gltf)\r\n    {\r\n        fromKeys(this, jsonPrimitive, [\"attributes\"]);\r\n\r\n        // Use the default glTF material.\r\n        if (this.material === undefined)\r\n        {\r\n            this.material = defaultMaterial;\r\n        }\r\n\r\n        // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n        for(let attrib of Object.keys(jsonPrimitive.attributes))\r\n        {\r\n            const idx = jsonPrimitive.attributes[attrib];\r\n            switch (attrib) {\r\n                case \"POSITION\":\r\n                    this.skip = false;\r\n                    this.attributes.push({attribute: attrib, name:\"a_Position\", accessor: idx});\r\n                    break;\r\n                case \"NORMAL\":\r\n                    this.defines.push(\"HAS_NORMALS 1\");\r\n                    this.attributes.push({attribute: attrib, name:\"a_Normal\", accessor: idx});\r\n                    break;\r\n                case \"TANGENT\":\r\n                    this.defines.push(\"HAS_TANGENTS 1\");\r\n                    this.attributes.push({attribute: attrib, name:\"a_Tangent\", accessor: idx});\r\n                    break;\r\n                case \"TEXCOORD_0\":\r\n                    this.defines.push(\"HAS_UV_SET1 1\");\r\n                    this.attributes.push({attribute: attrib, name:\"a_UV1\", accessor: idx});\r\n                    break;\r\n                case \"TEXCOORD_1\":\r\n                    this.defines.push(\"HAS_UV_SET2 1\");\r\n                    this.attributes.push({attribute: attrib, name:\"a_UV2\", accessor: idx});\r\n                    break;\r\n                case \"COLOR_0\":\r\n                    {\r\n                        const accessor = gltf.accessors[idx];\r\n                        this.defines.push(\"HAS_VERTEX_COLOR_\" + accessor.type + \" 1\");\r\n                        this.attributes.push({attribute: attrib, name:\"a_Color\", accessor: idx});\r\n                    }\r\n                    break;\r\n                case \"JOINTS_0\":\r\n                    this.defines.push(\"HAS_JOINTS 1\");\r\n                    // TODO: implement when we do animations later\r\n                    break;\r\n                case \"WEIGHTS_0\":\r\n                    this.defines.push(\"HAS_WEIGHTS 1\");\r\n                    // TODO: implement when we do animations later\r\n\r\n                    break;\r\n                default:\r\n                    console.log(\"Unknown attrib: \" + attrib);\r\n            }\r\n        }\r\n    }\r\n\r\n    getShaderIdentifier()\r\n    {\r\n        return \"primitive.vert\";\r\n    }\r\n\r\n    getDefines()\r\n    {\r\n        return this.defines;\r\n    }\r\n};\r\n\r\nexport { gltfPrimitive };\r\n","import { gltfPrimitive } from './primitive.js';\r\n\r\nclass gltfMesh\r\n{\r\n    constructor(primitives = [], name = undefined)\r\n    {\r\n        this.primitives = primitives;\r\n        this.name = name;\r\n    }\r\n\r\n    fromJson(jsonMesh, defaultMaterial, gltf)\r\n    {\r\n        if (jsonMesh.name !== undefined)\r\n        {\r\n            this.name = jsonMesh.name;\r\n        }\r\n\r\n        for (let i = 0; i < jsonMesh.primitives.length; ++i)\r\n        {\r\n            let primitive = new gltfPrimitive();\r\n            primitive.fromJson(jsonMesh.primitives[i], defaultMaterial, gltf);\r\n            this.primitives.push(primitive);\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfMesh };\r\n","import { mat4 } from 'gl-matrix';\r\nimport { jsToGl } from './utils.js';\r\n\r\n// contain:\r\n// transform\r\n// child indices (reference to scene array of nodes)\r\n\r\nclass gltfNode\r\n{\r\n    //  vec3 translation, quat rotation, vec3 scale\r\n    constructor(translation = jsToGl([0, 0, 0]),\r\n                rotation = jsToGl([0, 0, 0, 1]),\r\n                scale = jsToGl([1, 1, 1]),\r\n                children = [],\r\n                name = undefined)\r\n    {\r\n        this.translation = translation;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n        this.matrix = undefined;\r\n        this.children = children;\r\n        this.camera = undefined;\r\n        this.name = name;\r\n\r\n        // non-standard:\r\n        this.worldTransform = mat4.create();\r\n        this.inverseWorldTransform = mat4.create();\r\n        this.normalMatrix = mat4.create();\r\n        this.light = undefined;\r\n        this.changed = true;\r\n    }\r\n\r\n    fromJson(jsonNode)\r\n    {\r\n        if (jsonNode.name !== undefined)\r\n        {\r\n            this.name = jsonNode.name;\r\n        }\r\n\r\n        if (jsonNode.children !== undefined)\r\n        {\r\n            this.children = jsonNode.children;\r\n        }\r\n\r\n        this.mesh = jsonNode.mesh;\r\n        this.camera = jsonNode.camera;\r\n\r\n        if (jsonNode.matrix !== undefined)\r\n        {\r\n            this.applyMatrix(jsonNode.matrix);\r\n        }\r\n        else\r\n        {\r\n            if (jsonNode.scale !== undefined)\r\n            {\r\n                this.scale = jsToGl(jsonNode.scale);\r\n            }\r\n\r\n            if (jsonNode.rotation !== undefined)\r\n            {\r\n                this.rotation = jsToGl(jsonNode.rotation);\r\n            }\r\n\r\n            if (jsonNode.translation !== undefined)\r\n            {\r\n                this.translation = jsToGl(jsonNode.translation);\r\n            }\r\n        }\r\n        this.changed = true;\r\n    }\r\n\r\n    applyMatrix(matrixData)\r\n    {\r\n        this.matrix = jsToGl(matrixData);\r\n\r\n        mat4.getScaling(this.scale, this.matrix);\r\n        mat4.getRotation(this.rotation, this.matrix);\r\n        mat4.getTranslation(this.translation, this.matrix);\r\n\r\n        this.changed = true;\r\n    }\r\n\r\n    // vec3\r\n    translate(translation)\r\n    {\r\n        this.translation = translation;\r\n        this.changed = true;\r\n    }\r\n\r\n    // quat\r\n    rotate(rotation)\r\n    {\r\n        this.rotation = rotation;\r\n        this.changed = true;\r\n    }\r\n\r\n    // vec3\r\n    scale(scale)\r\n    {\r\n        this.scale = scale;\r\n        this.changed = true;\r\n    }\r\n\r\n    // TODO: WEIGHTS\r\n\r\n    // local transform\r\n    getTransform()\r\n    {\r\n        if(this.transform === undefined || this.changed)\r\n        {\r\n            if (this.matrix !== undefined)\r\n            {\r\n                this.transform = this.matrix;\r\n            }\r\n            else\r\n            {\r\n                this.transform = mat4.create();\r\n                mat4.fromRotationTranslationScale(this.transform, this.rotation, this.translation, this.scale);\r\n            }\r\n            this.changed = false;\r\n        }\r\n\r\n        return mat4.clone(this.transform);\r\n    }\r\n};\r\n\r\nexport { gltfNode };\r\n","import { fromKeys } from './utils.js';\r\n\r\nclass gltfSampler\r\n{\r\n    constructor(magFilter = gl.LINEAR, minFilter = gl.LINEAR_MIPMAP_LINEAR,\r\n                wrapS = gl.REPEAT, wrapT = gl.REPEAT,\r\n                name = undefined)\r\n    {\r\n        this.magFilter = magFilter;\r\n        this.minFilter = minFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.name = name;\r\n    }\r\n\r\n    fromJson(jsonSampler)\r\n    {\r\n        fromKeys(this, jsonSampler);\r\n    }\r\n};\r\n\r\nexport { gltfSampler };\r\n","import { mat4 } from 'gl-matrix';\r\nimport { jsToGl } from './utils.js';\r\n\r\nclass gltfScene\r\n{\r\n    constructor(nodes = [], name = undefined)\r\n    {\r\n        this.nodes = nodes;\r\n        this.name = name;\r\n    }\r\n\r\n    fromJson(jsonScene)\r\n    {\r\n        if (jsonScene.nodes !== undefined)\r\n        {\r\n            this.nodes = jsonScene.nodes;\r\n        }\r\n\r\n        this.name = jsonScene.name;\r\n    }\r\n\r\n    applyTransformHierarchy(gltf, rootTransform = mat4.create())\r\n    {\r\n        function applyTransform(gltf, node, parentTransform)\r\n        {\r\n            mat4.multiply(node.worldTransform, parentTransform, node.getTransform());\r\n            mat4.invert(node.inverseWorldTransform, node.worldTransform);\r\n            mat4.transpose(node.normalMatrix, node.inverseWorldTransform);\r\n\r\n            for (let c of node.children)\r\n            {\r\n                applyTransform(gltf, gltf.nodes[c], node.worldTransform);\r\n            }\r\n        }\r\n\r\n        for (let n of this.nodes)\r\n        {\r\n            applyTransform(gltf, gltf.nodes[n], rootTransform);\r\n        }\r\n    }\r\n\r\n    // can only be called after gltf as been fully parsed and constructed\r\n    getSceneWithAlphaMode(gltf, mode = 'OPAQUE', not = false)\r\n    {\r\n        let Nodes = [];\r\n        function AddNode (nodeIndex)\r\n        {\r\n            let node = gltf.nodes[nodeIndex];\r\n            let mesh = gltf.meshes[node.mesh];\r\n\r\n            if (mesh !== undefined)\r\n            {\r\n                for (let primitive of mesh.primitives)\r\n                {\r\n                    if (primitive.skip === false)\r\n                    {\r\n                        const material = gltf.materials[primitive.material];\r\n                        if (material !== undefined && (not ? material.alphaMode !== mode : material.alphaMode === mode))\r\n                        {\r\n                            Nodes.push(nodeIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // recurse into children\r\n            for(let c of node.children)\r\n            {\r\n                AddNode(c);\r\n            }\r\n        }\r\n\r\n        for (let n of this.nodes)\r\n        {\r\n            AddNode(n)\r\n        }\r\n\r\n        return new gltfScene(Nodes, this.name);\r\n    }\r\n\r\n    sortSceneByDepth(gltf, viewProjectionMatrix, rootTransform)\r\n    {\r\n        // vector of {abs position, nodeIndex}\r\n        let posNodes = [];\r\n\r\n        function AddPosNode (nodeIndex, parentTransform)\r\n        {\r\n            let node = gltf.nodes[nodeIndex];\r\n\r\n            let transform = node.getTransform(); // local transform\r\n            mat4.multiply(transform, parentTransform, transform);\r\n            mat4.multiply(transform, viewProjectionMatrix, transform);\r\n\r\n            let pos = jsToGl([0, 0, 0]); // world pos\r\n            mat4.getTranslation(pos, transform);\r\n\r\n            // TODO: we could clip objects behind the camera\r\n            posNodes.push({depth: pos[2], idx: nodeIndex});\r\n\r\n            // recurse into children\r\n            for(let c of node.children)\r\n            {\r\n                AddNode(gltf.nodes[c], transform);\r\n            }\r\n        }\r\n\r\n        for (let n of this.nodes)\r\n        {\r\n            AddPosNode(n, rootTransform);\r\n        }\r\n\r\n        // high z far from camera first\r\n        posNodes.sort(function(a,b) {return a.depth - b.depth});\r\n\r\n        this.nodes = [];\r\n        for(let node of posNodes)\r\n        {\r\n            this.nodes.push(node.idx)\r\n        }\r\n    }\r\n\r\n    includesNode(gltf, nodeIndex)\r\n    {\r\n        let children = [...this.nodes];\r\n        while(children.length > 0)\r\n        {\r\n            const childIndex = children.pop();\r\n\r\n            if (childIndex === nodeIndex)\r\n            {\r\n                return true;\r\n            }\r\n\r\n            children = children.concat(gltf.nodes[childIndex].children);\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { gltfScene };\r\n","import { gltfAccessor } from './accessor.js';\r\nimport { gltfBuffer } from './buffer.js';\r\nimport { gltfBufferView } from './buffer_view.js';\r\nimport { gltfCamera } from './camera.js';\r\nimport { gltfImage } from './image.js';\r\nimport { gltfLight } from './light.js';\r\nimport { gltfMaterial } from './material.js';\r\nimport { gltfMesh } from './mesh.js';\r\nimport { gltfNode } from './node.js';\r\nimport { gltfSampler } from './sampler.js';\r\nimport { gltfScene } from './scene.js';\r\nimport { gltfTexture } from './texture.js';\r\n\r\nclass glTF\r\n{\r\n    constructor(file)\r\n    {\r\n        this.accessors = [];\r\n        this.nodes = [];\r\n        this.scene = undefined; // the default scene to show.\r\n        this.scenes = [];\r\n        this.cameras = [];\r\n        this.lights = [];\r\n        this.textures = [];\r\n        this.images = [];\r\n        this.samplers = [];\r\n        this.meshes = [];\r\n        this.buffers = [];\r\n        this.bufferViews = [];\r\n        this.materials = [];\r\n        this.defaultMaterial = -1;\r\n        this.defaultSampler  = -1;\r\n        this.cubemapSampler  = -1;\r\n        this.path = file.substr(0, file.lastIndexOf(\"/\") + 1);\r\n    }\r\n\r\n    fromJsonNodes(jsonNodes)\r\n    {\r\n        for (let i = 0; i < jsonNodes.length; ++i)\r\n        {\r\n            const jsonNode = jsonNodes[i];\r\n            let node = new gltfNode();\r\n            node.fromJson(jsonNode);\r\n            this.nodes.push(node);\r\n\r\n            // assign the corresponding camera node\r\n            if(node.camera !== undefined)\r\n            {\r\n                this.cameras[node.camera].node = i;\r\n            }\r\n\r\n            if(jsonNode.extensions !== undefined)\r\n            {\r\n                if (jsonNode.extensions.KHR_lights_punctual !== undefined)\r\n                {\r\n                    this.lights[jsonNode.extensions.KHR_lights_punctual.light].node = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fromJsonCameras(jsonCameras)\r\n    {\r\n        for (let i = 0; i < jsonCameras.length; ++i)\r\n        {\r\n            let camera = new gltfCamera();\r\n            camera.fromJson(jsonCameras[i]);\r\n            this.cameras.push(camera);\r\n        }\r\n    }\r\n\r\n    // pass extenstions.KHR_lights_punctual.lights to this\r\n    fromJsonLights(jsonLights)\r\n    {\r\n        for (let i = 0; i < jsonLights.length; ++i)\r\n        {\r\n            let light = new gltfLight();\r\n            light.fromJson(jsonLights[i]);\r\n            this.lights.push(light);\r\n        }\r\n    }\r\n\r\n    fromJsonMeshes(jsonMeshes)\r\n    {\r\n        for (let i = 0; i < jsonMeshes.length; ++i)\r\n        {\r\n            let mesh = new gltfMesh();\r\n            mesh.fromJson(jsonMeshes[i], this.defaultMaterial, this);\r\n            this.meshes.push(mesh);\r\n        }\r\n    }\r\n\r\n    fromJsonSamplers(jsonSamplers)\r\n    {\r\n        for (let i = 0; i < jsonSamplers.length; ++i)\r\n        {\r\n            let sampler = new gltfSampler();\r\n            sampler.fromJson(jsonSamplers[i]);\r\n            this.samplers.push(sampler);\r\n        }\r\n    }\r\n\r\n    fromJsonImages(jsonImages)\r\n    {\r\n        for (let i = 0; i < jsonImages.length; ++i)\r\n        {\r\n            let image = new gltfImage();\r\n            image.fromJson(jsonImages[i], this.path);\r\n            this.images.push(image);\r\n        }\r\n    }\r\n\r\n    fromJsonTextures(jsonTextures)\r\n    {\r\n        for (let i = 0; i < jsonTextures.length; ++i)\r\n        {\r\n            let texture = new gltfTexture();\r\n            texture.fromJson(jsonTextures[i], this.defaultSampler);\r\n            this.textures.push(texture);\r\n        }\r\n    }\r\n\r\n    fromJsonBuffers(jsonBuffers)\r\n    {\r\n        for (let i = 0; i < jsonBuffers.length; ++i)\r\n        {\r\n            let buffer = new gltfBuffer();\r\n            buffer.fromJson(jsonBuffers[i]);\r\n            this.buffers.push(buffer);\r\n        }\r\n    }\r\n\r\n    fromJsonBufferViews(jsonBufferViews)\r\n    {\r\n        for (let i = 0; i < jsonBufferViews.length; ++i)\r\n        {\r\n            let bufferView = new gltfBufferView();\r\n            bufferView.fromJson(jsonBufferViews[i]);\r\n            this.bufferViews.push(bufferView);\r\n        }\r\n    }\r\n\r\n    fromJsonAccessors(jsonAccessors)\r\n    {\r\n        for (let i = 0; i < jsonAccessors.length; ++i)\r\n        {\r\n            let accessor = new gltfAccessor();\r\n            accessor.fromJson(jsonAccessors[i]);\r\n            this.accessors.push(accessor);\r\n        }\r\n    }\r\n\r\n    fromJsonScenes(jsonScenes)\r\n    {\r\n        for (let i = 0; i < jsonScenes.length; ++i)\r\n        {\r\n            let scene = new gltfScene();\r\n            scene.fromJson(jsonScenes[i]);\r\n            this.scenes.push(scene);\r\n        }\r\n    }\r\n\r\n    fromJsonMaterials(jsonMaterials)\r\n    {\r\n        for (let i = 0; i < jsonMaterials.length; ++i)\r\n        {\r\n            let material = new gltfMaterial();\r\n            material.fromJson(jsonMaterials[i]);\r\n            this.materials.push(material);\r\n        }\r\n    }\r\n\r\n    fromJson(json)\r\n    {\r\n        if(json.cameras !== undefined)\r\n        {\r\n            this.fromJsonCameras(json.cameras);\r\n        }\r\n\r\n        if(json.extensions !== undefined)\r\n        {\r\n            if(json.extensions.KHR_lights_punctual !== undefined)\r\n            {\r\n                if(json.extensions.KHR_lights_punctual.lights !== undefined)\r\n                {\r\n                    this.fromJsonLights(json.extensions.KHR_lights_punctual.lights);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(json.nodes !== undefined)\r\n        {\r\n            this.fromJsonNodes(json.nodes);\r\n        }\r\n\r\n        if (json.materials !== undefined)\r\n        {\r\n            this.fromJsonMaterials(json.materials);\r\n        }\r\n\r\n        this.materials.push(gltfMaterial.getDefaults());\r\n        this.defaultMaterial = this.materials.length - 1;\r\n\r\n        if (json.accessors !== undefined)\r\n        {\r\n            this.fromJsonAccessors(json.accessors);\r\n        }\r\n\r\n        if (json.meshes !== undefined)\r\n        {\r\n            this.fromJsonMeshes(json.meshes);\r\n        }\r\n\r\n        if(json.samplers !== undefined)\r\n        {\r\n            this.fromJsonSamplers(json.samplers);\r\n        }\r\n\r\n        this.samplers.push(new gltfSampler());\r\n        this.defaultSampler = this.samplers.length - 1;\r\n\r\n        if(json.textures !== undefined)\r\n        {\r\n            this.fromJsonTextures(json.textures);\r\n        }\r\n\r\n        if(json.images !== undefined)\r\n        {\r\n            this.fromJsonImages(json.images);\r\n        }\r\n\r\n        if(json.buffers !== undefined)\r\n        {\r\n            this.fromJsonBuffers(json.buffers);\r\n        }\r\n\r\n        if(json.bufferViews !== undefined)\r\n        {\r\n            this.fromJsonBufferViews(json.bufferViews);\r\n        }\r\n\r\n        // Load the default scene too.\r\n        if (json.scenes !== undefined)\r\n        {\r\n            if (json.scene === undefined && json.scenes.length > 0)\r\n            {\r\n                this.scene = 0;\r\n            }\r\n            else\r\n            {\r\n                this.scene = json.scene;\r\n            }\r\n        }\r\n\r\n        if (json.scenes !== undefined)\r\n        {\r\n            this.fromJsonScenes(json.scenes);\r\n        }\r\n    }\r\n};\r\n\r\nexport { glTF };\r\n","class gltfLoader\r\n{\r\n    static load(gltf, appendix = undefined)\r\n    {\r\n        let buffers;\r\n        let additionalFiles;\r\n        if (appendix && appendix.length > 0)\r\n        {\r\n            if (appendix[0] instanceof ArrayBuffer)\r\n            {\r\n                buffers = appendix;\r\n            }\r\n            else if (appendix[0] instanceof File)\r\n            {\r\n                additionalFiles = appendix;\r\n            }\r\n        }\r\n\r\n        let promises = [];\r\n\r\n        if (buffers)\r\n        {\r\n            const count = Math.min(buffers.length, gltf.buffers.length);\r\n            for (let i = 0; i < count; ++i)\r\n            {\r\n                gltf.buffers[i].buffer = buffers[i];\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for (const buffer of gltf.buffers)\r\n            {\r\n                promises.push(buffer.load(gltf, additionalFiles));\r\n            }\r\n        }\r\n\r\n        for (let image of gltf.images)\r\n        {\r\n            promises.push(image.load(gltf, additionalFiles));\r\n        }\r\n\r\n        return promises;\r\n    }\r\n\r\n    static unload(gltf)\r\n    {\r\n        for (let image of gltf.images)\r\n        {\r\n            image.image = undefined;\r\n        }\r\n\r\n        for (let texture of gltf.textures)\r\n        {\r\n            texture.destroy();\r\n        }\r\n\r\n        for (let accessor of gltf.accessors)\r\n        {\r\n            accessor.destroy();\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfLoader };\r\n","import {\r\n    getContainingFolder,\r\n    combinePaths,\r\n    getFileNameWithoutExtension\r\n} from './utils.js';\r\n\r\nclass gltfModelPathProvider\r\n{\r\n    constructor(modelIndexerPath, ignoredVariants = [\"glTF-Draco\", \"glTF-Embedded\"])\r\n    {\r\n        this.modelIndexerPath = modelIndexerPath;\r\n        this.ignoredVariants = ignoredVariants;\r\n        this.modelsDictionary = undefined;\r\n    }\r\n\r\n    initialize()\r\n    {\r\n        const self = this;\r\n        return axios.get(this.modelIndexerPath).then(response =>\r\n        {\r\n            const modelIndexer = response.data;\r\n            self.populateDictionary(modelIndexer);\r\n        });\r\n    }\r\n\r\n    resolve(modelKey)\r\n    {\r\n        return this.modelsDictionary[modelKey];\r\n    }\r\n\r\n    getAllKeys()\r\n    {\r\n        return Object.keys(this.modelsDictionary);\r\n    }\r\n\r\n    populateDictionary(modelIndexer)\r\n    {\r\n        const modelsFolder = getContainingFolder(this.modelIndexerPath);\r\n        this.modelsDictionary = {};\r\n        for (const entry of modelIndexer)\r\n        {\r\n            if (entry.variants === undefined)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            for (const variant of Object.keys(entry.variants))\r\n            {\r\n                if (this.ignoredVariants.includes(variant))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                const fileName = entry.variants[variant];\r\n                const modelPath = combinePaths(modelsFolder, entry.name, variant, fileName);\r\n                let modelKey = getFileNameWithoutExtension(fileName);\r\n                if (variant !== \"glTF\")\r\n                {\r\n                    modelKey += \" (\" + variant.replace(\"glTF-\", \"\") + \")\";\r\n                }\r\n                this.modelsDictionary[modelKey] = modelPath;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { gltfModelPathProvider };\r\n","import { UniformStruct } from './utils.js';\r\n\r\nclass gltfShader\r\n{\r\n    constructor(program, hash)\r\n    {\r\n        this.program = program;\r\n        this.hash = hash;\r\n        this.uniforms = new Map();\r\n        this.attributes = new Map();\r\n\r\n        if(this.program !== undefined)\r\n        {\r\n            const uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n            for(let i = 0; i < uniformCount; ++i)\r\n            {\r\n                const info = gl.getActiveUniform(this.program, i);\r\n                const loc = gl.getUniformLocation(this.program, info.name);\r\n                this.uniforms.set(info.name, {type: info.type, loc: loc});\r\n            }\r\n\r\n            const attribCount = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\r\n            for(let i = 0; i < attribCount; ++i)\r\n            {\r\n                const info = gl.getActiveAttrib(this.program, i);\r\n                const loc = gl.getAttribLocation(this.program, info.name);\r\n                this.attributes.set(info.name, loc);\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        if (this.program !== undefined)\r\n        {\r\n            this.deleteProgram(this.program);\r\n        }\r\n\r\n        this.program = undefined;\r\n    }\r\n\r\n    getAttribLocation(name)\r\n    {\r\n        const loc = this.attributes.get(name);\r\n\r\n        if(loc !== undefined)\r\n        {\r\n            return loc;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Attribute name '\" + name + \"' doesn't exist!\");\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    getUniformLocation(name)\r\n    {\r\n        const uniform = this.uniforms.get(name);\r\n\r\n        if(uniform !== undefined)\r\n        {\r\n            return uniform.loc;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Uniform name '\" + name + \"' doesn't exist!\");\r\n            return -1;\r\n        }\r\n    }\r\n\r\n\r\n    updateUniform(objectName, object, log = true)\r\n    {\r\n        if (Array.isArray(object))\r\n        {\r\n            this.updateUniformArray(objectName, object, log);\r\n        }\r\n        else if (object instanceof UniformStruct)\r\n        {\r\n            this.updateUniformStruct(objectName, object, log);\r\n        }\r\n        else\r\n        {\r\n            this.updateUniformValue(objectName, object, log);\r\n        }\r\n    }\r\n\r\n    updateUniformArray(arrayName, array, log)\r\n    {\r\n        for (let i = 0; i < array.length; ++i)\r\n        {\r\n            let element = array[i];\r\n            let uniformName = arrayName + \"[\" + i + \"]\";\r\n            this.updateUniform(uniformName, element, log);\r\n        }\r\n    }\r\n\r\n    updateUniformStruct(structName, object, log)\r\n    {\r\n        let memberNames = Object.keys(object);\r\n        for (let memberName of memberNames)\r\n        {\r\n            let uniformName = structName + \".\" + memberName;\r\n            this.updateUniform(uniformName, object[memberName], log);\r\n        }\r\n    }\r\n\r\n    // upload the values of a uniform with the given name using type resolve to get correct function call\r\n    // vec3 => gl.uniform3f(value)\r\n    updateUniformValue(uniformName, value, log)\r\n    {\r\n        const uniform = this.uniforms.get(uniformName);\r\n\r\n        if(uniform !== undefined)\r\n        {\r\n            switch (uniform.type) {\r\n                case gl.FLOAT: gl.uniform1f(uniform.loc, value); break;\r\n                case gl.FLOAT_VEC2: gl.uniform2fv(uniform.loc, value); break;\r\n                case gl.FLOAT_VEC3: gl.uniform3fv(uniform.loc, value); break;\r\n                case gl.FLOAT_VEC4: gl.uniform4fv(uniform.loc, value); break;\r\n\r\n                case gl.INT: gl.uniform1i(uniform.loc, value); break;\r\n                case gl.INT_VEC2: gl.uniform2iv(uniform.loc, value); break;\r\n                case gl.INT_VEC3: gl.uniform3iv(uniform.loc, value); break;\r\n                case gl.INT_VEC4: gl.uniform4iv(uniform.loc, value); break;\r\n\r\n                case gl.FLOAT_MAT2: gl.uniformMatrix2fv(uniform.loc, false, value); break;\r\n                case gl.FLOAT_MAT3: gl.uniformMatrix3fv(uniform.loc, false, value); break;\r\n                case gl.FLOAT_MAT4: gl.uniformMatrix4fv(uniform.loc, false, value); break;\r\n            }\r\n        }\r\n        else if(log)\r\n        {\r\n            console.warn(\"Unkown uniform: \" + uniformName);\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfShader };\r\n","function LoadWebGLExtensions(webglExtensions)\r\n{\r\n    for (let extension of webglExtensions)\r\n    {\r\n        if(gl.getExtension(extension) === null)\r\n        {\r\n            console.warn(\"Extension \" + extension + \" not supported!\");\r\n        }\r\n    }\r\n\r\n    let EXT_texture_filter_anisotropic = gl.getExtension(\"EXT_texture_filter_anisotropic\");\r\n\r\n    if (EXT_texture_filter_anisotropic)\r\n    {\r\n        gl.anisotropy = EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT;\r\n        gl.maxAnisotropy = gl.getParameter(EXT_texture_filter_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n        gl.supports_EXT_texture_filter_anisotropic = true;\r\n    }\r\n    else\r\n    {\r\n        gl.supports_EXT_texture_filter_anisotropic = false;\r\n    }\r\n}\r\n\r\n//https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\r\nfunction SetSampler(gltfSamplerObj, type) // TEXTURE_2D\r\n{\r\n    gl.texParameteri(type, gl.TEXTURE_WRAP_S, gltfSamplerObj.wrapS);\r\n    gl.texParameteri(type, gl.TEXTURE_WRAP_T, gltfSamplerObj.wrapT);\r\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gltfSamplerObj.minFilter);\r\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gltfSamplerObj.magFilter);\r\n\r\n    if (gl.supports_EXT_texture_filter_anisotropic)\r\n    {\r\n        gl.texParameterf(type, gl.anisotropy, gl.maxAnisotropy); // => 16xAF\r\n    }\r\n}\r\n\r\nfunction SetTexture(loc, gltf, textureInfo, texSlot)\r\n{\r\n    if(loc == -1)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let gltfTex = gltf.textures[textureInfo.index];\r\n\r\n    if(gltfTex === undefined)\r\n    {\r\n        console.warn(\"Texture is undefined: \" + textureInfo.index);\r\n        return false;\r\n    }\r\n\r\n    if(gltfTex.glTexture === undefined)\r\n    {\r\n        gltfTex.glTexture = gl.createTexture();\r\n    }\r\n\r\n    gl.activeTexture(gl.TEXTURE0 + texSlot);\r\n    gl.bindTexture(gltfTex.type, gltfTex.glTexture);\r\n\r\n    gl.uniform1i(loc, texSlot);\r\n\r\n    if(!gltfTex.initialized)\r\n    {\r\n        const gltfSampler = gltf.samplers[gltfTex.sampler];\r\n\r\n        if(gltfSampler === undefined)\r\n        {\r\n            console.warn(\"Sampler is undefined for texture: \" + textureInfo.index);\r\n            return false;\r\n        }\r\n\r\n        SetSampler(gltfSampler, gltfTex.type);\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n        let images = [];\r\n\r\n        if(gltfTex.source.length !== undefined)\r\n        {\r\n            // assume we have an array of textures (this is an unofficial extension to what glTF json can represent)\r\n            images = gltfTex.source;\r\n        }\r\n        else\r\n        {\r\n            images = [gltfTex.source];\r\n        }\r\n\r\n        let generateMips = true;\r\n\r\n        for(const src of images)\r\n        {\r\n            const image =  gltf.images[src];\r\n\r\n            if (image === undefined)\r\n            {\r\n                console.warn(\"Image is undefined for texture: \" + gltfTex.source);\r\n                return false;\r\n            }\r\n\r\n            if (image.image.dataRGBE !== undefined)\r\n            {\r\n                gl.texImage2D(image.type, image.miplevel, gl.RGB, image.image.width, image.image.height, 0, gl.RGB, gl.FLOAT, image.image.dataFloat);\r\n                generateMips = false;\r\n            }\r\n            else\r\n            {\r\n                gl.texImage2D(image.type, image.miplevel, textureInfo.colorSpace, textureInfo.colorSpace, gl.UNSIGNED_BYTE, image.image);\r\n            }\r\n        }\r\n\r\n        if (textureInfo.generateMips && generateMips)\r\n        {\r\n            // Until this point, images can be assumed to be power of two.\r\n            switch (gltfSampler.minFilter) {\r\n                case gl.NEAREST_MIPMAP_NEAREST:\r\n                case gl.NEAREST_MIPMAP_LINEAR:\r\n                case gl.LINEAR_MIPMAP_NEAREST:\r\n                case gl.LINEAR_MIPMAP_LINEAR:\r\n                    gl.generateMipmap(gltfTex.type);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        gltfTex.initialized = true;\r\n    }\r\n\r\n    return gltfTex.initialized;\r\n}\r\n\r\nfunction SetIndices(gltf, accessorIndex)\r\n{\r\n    let gltfAccessor = gltf.accessors[accessorIndex];\r\n\r\n    if (gltfAccessor.glBuffer === undefined)\r\n    {\r\n        gltfAccessor.glBuffer = gl.createBuffer();\r\n\r\n        let data = gltfAccessor.getTypedView(gltf);\r\n\r\n        if (data === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n    }\r\n    else\r\n    {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction EnableAttribute(gltf, attributeLocation, gltfAccessor)\r\n{\r\n    if(attributeLocation == -1)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let gltfBufferView = gltf.bufferViews[gltfAccessor.bufferView];\r\n\r\n    if (gltfAccessor.glBuffer === undefined)\r\n    {\r\n        gltfAccessor.glBuffer = gl.createBuffer();\r\n\r\n        let data = gltfAccessor.getTypedView(gltf);\r\n\r\n        if (data === undefined)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gltfAccessor.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n    }\r\n    else\r\n    {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gltfAccessor.glBuffer);\r\n    }\r\n\r\n    gl.vertexAttribPointer(attributeLocation, gltfAccessor.getComponentCount(), gltfAccessor.componentType,\r\n                           gltfAccessor.normalized, gltfBufferView.byteStride, gltfAccessor.byteOffset);\r\n    gl.enableVertexAttribArray(attributeLocation);\r\n\r\n    return true;\r\n}\r\n\r\nfunction CompileShader(isVert, shaderSource)\r\n{\r\n    let shader = gl.createShader(isVert ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\r\n    if (!compiled) {\r\n\r\n        console.warn(gl.getShaderInfoLog(shader));\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\nfunction LinkProgram(vertex, fragment)\r\n{\r\n    let program = gl.createProgram();\r\n    gl.attachShader(program, vertex);\r\n    gl.attachShader(program, fragment);\r\n    gl.linkProgram(program);\r\n\r\n    return program;\r\n}\r\n\r\nexport {\r\n    LoadWebGLExtensions,\r\n    SetSampler,\r\n    SetTexture,\r\n    SetIndices,\r\n    EnableAttribute,\r\n    CompileShader,\r\n    LinkProgram\r\n};\r\n","import { gltfShader } from './shader.js';\r\nimport { stringHash, combineHashes } from './utils.js';\r\nimport { CompileShader, LinkProgram } from './webgl.js';\r\n\r\n// THis class generates and caches the shader source text for a given permutation\r\nclass ShaderCache\r\n{\r\n    constructor(shaderFolder, shaderFiles)\r\n    {\r\n        this.shaders  = new Map(); // name & permutations hashed -> compiled shader\r\n        this.sources  = new Map();; // shader name -> source code\r\n        this.programs = new Map(); // (vertex shader, fragment shader) -> program\r\n        this.loaded   = false;\r\n\r\n        let self = this;\r\n        let loadPromises = [];\r\n        for (let file of shaderFiles)\r\n        {\r\n            const url = shaderFolder + file;\r\n            loadPromises.push(axios.get(url, { responseType: 'text' }));\r\n        }\r\n\r\n        Promise.all(loadPromises).then(function (responseArray) {\r\n            for (let fileIdx in shaderFiles)\r\n            {\r\n                let name = shaderFiles[fileIdx];\r\n                let response = responseArray[fileIdx];\r\n                self.sources.set(name, response.data);\r\n            }\r\n\r\n            // TODO: remove any // or /* style comments\r\n\r\n            // resovle / expande sources (TODO: break include cycles)\r\n            for (let [key, src] of self.sources)\r\n            {\r\n                let changed = false;\r\n                for (let includeName of shaderFiles)\r\n                {\r\n                    //var pattern = RegExp(/#include</ + includeName + />/);\r\n                    const pattern = \"#include <\" + includeName + \">\";\r\n\r\n                    if(src.includes(pattern))\r\n                    {\r\n                        // only replace the first occurance\r\n                        src = src.replace(pattern, self.sources.get(includeName));\r\n\r\n                        // remove the others\r\n                        while (src.includes(pattern)) {\r\n                            src = src.replace(pattern, \"\");\r\n                        }\r\n\r\n                        changed = true;\r\n                    }\r\n                }\r\n\r\n                if(changed)\r\n                {\r\n                    self.sources.set(key, src);\r\n                }\r\n            }\r\n\r\n            self.loaded = true;\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        for (let [identifier, shader] of this.shaders.entries())\r\n        {\r\n            gl.deleteShader(shader);\r\n            shader = undefined;\r\n        }\r\n\r\n        this.shaders.clear();\r\n\r\n        for (let [shader_hash, program] of this.programs)\r\n        {\r\n            program.destroy();\r\n        }\r\n\r\n        this.programs.clear();\r\n    }\r\n\r\n    // example args: \"pbr.vert\", [\"NORMALS\", \"TANGENTS\"]\r\n    selectShader(shaderIdentifier, permutationDefines)\r\n    {\r\n        // first check shaders for the exact permutation\r\n        // if not present, check sources and compile it\r\n        // if not present, return null object\r\n\r\n        const src = this.sources.get(shaderIdentifier);\r\n        if(src === undefined)\r\n        {\r\n            if(this.loaded)\r\n            {\r\n                console.log(\"Shader source for \" + shaderIdentifier + \" not found\");\r\n            }\r\n            return null;\r\n        }\r\n\r\n        const isVert = shaderIdentifier.endsWith(\".vert\");\r\n        let hash = stringHash(shaderIdentifier);\r\n\r\n        // console.log(shaderIdentifier);\r\n\r\n        let defines = \"\";\r\n        for(let define of permutationDefines)\r\n        {\r\n            // console.log(define);\r\n            hash ^= stringHash(define);\r\n            defines += \"#define \" + define + \"\\n\";\r\n        }\r\n\r\n        let shader = this.shaders.get(hash);\r\n\r\n        if(shader === undefined)\r\n        {\r\n            // console.log(defines);\r\n            // compile this variant\r\n            shader = CompileShader(isVert, defines + src);\r\n            if(shader)\r\n            {\r\n                this.shaders.set(hash, shader);\r\n            }\r\n            else\r\n            {\r\n                console.log(shaderIdentifier + \" compilation failed!\");\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        return hash;\r\n    }\r\n\r\n    getShaderProgram(vertexShaderHash, fragmentShaderHash)\r\n    {\r\n        const hash = combineHashes(vertexShaderHash, fragmentShaderHash);\r\n\r\n        let program = this.programs.get(hash);\r\n\r\n        if (program) // program already linked\r\n        {\r\n            return program;\r\n        }\r\n        else // link this shader program type!\r\n        {\r\n            let linkedProg = LinkProgram(this.shaders.get(vertexShaderHash), this.shaders.get(fragmentShaderHash));\r\n            if(linkedProg)\r\n            {\r\n                let program = new gltfShader(linkedProg, hash);\r\n                this.programs.set(hash, program);\r\n                return program;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport { ShaderCache };\r\n","const ToneMaps =\r\n{\r\n    LINEAR: \"Linear\" ,\r\n    UNCHARTED: \"Uncharted 2\" ,\r\n    HEJL_RICHARD: \"Hejl Richard\"\r\n};\r\n\r\nconst DebugOutput =\r\n{\r\n    NONE: \"None\",\r\n    METALLIC: \"Metallic\",\r\n    ROUGHNESS: \"Roughness\",\r\n    NORMAL: \"Normal\",\r\n    BASECOLOR: \"Base Color\",\r\n    OCCLUSION: \"Occlusion\",\r\n    EMISIVE: \"Emissive\",\r\n    ALPHA: \"Alpha\",\r\n    F0: \"F0\"\r\n};\r\n\r\nconst Environments =\r\n[\r\n    \"papermill\",\r\n    \"field\",\r\n    \"doge2\"\r\n];\r\n\r\nconst EnvironmentsMipLevel =\r\n[\r\n    9,\r\n    10,\r\n    10\r\n];\r\n\r\nclass gltfRenderingParameters\r\n{\r\n    constructor(\r\n        environment = undefined,\r\n        useIBL = true,\r\n        usePunctual = false,\r\n        useHdr = true,\r\n        exposure = 1.0,\r\n        gamma = 2.2,\r\n        clearColor = [51, 51, 51],\r\n        toneMap = ToneMaps.LINEAR,\r\n        debugOutput = DebugOutput.NONE)\r\n    {\r\n        this.useIBL = useIBL;\r\n        this.usePunctual = usePunctual;\r\n        this.useHdr = useHdr;\r\n        this.exposure = exposure;\r\n        this.gamma = gamma;\r\n        this.clearColor = clearColor;\r\n        this.toneMap = toneMap;\r\n        this.debugOutput = debugOutput;\r\n\r\n        this.updateEnvironment(environment);\r\n\r\n        const OES_texture_float = gl.getExtension(\"OES_texture_float\");\r\n        const OES_texture_float_linear = gl.getExtension(\"OES_texture_float_linear\");\r\n        if ((!OES_texture_float || !OES_texture_float_linear) && this.useHdr)\r\n        {\r\n            this.useHdr = false;\r\n            console.warn(\"Forcing to LDR rendering.\");\r\n        }\r\n    }\r\n\r\n    updateEnvironment(environment)\r\n    {\r\n        if (Environments.includes(environment))\r\n        {\r\n            this.environment = environment;\r\n            this.environmentMipLevel = EnvironmentsMipLevel[Environments.indexOf(environment)];\r\n        }\r\n        else\r\n        {\r\n            console.warn(\"Environment '%s' is not supported.\", environment);\r\n            this.environment = Environments[0];\r\n            this.environmentMipLevel = EnvironmentsMipLevel[0];\r\n        }\r\n    }\r\n};\r\n\r\nexport { gltfRenderingParameters, Environments, ToneMaps, DebugOutput };\r\n","import { mat4, vec3 } from 'gl-matrix';\r\nimport { gltfLight } from './light.js';\r\nimport { gltfTextureInfo } from './texture.js';\r\nimport { ShaderCache } from './shader_cache.js';\r\nimport { jsToGl } from './utils.js';\r\nimport { LoadWebGLExtensions, SetIndices, SetTexture, EnableAttribute } from './webgl.js';\r\nimport { ToneMaps, DebugOutput } from './rendering_parameters.js';\r\n\r\nclass gltfRenderer\r\n{\r\n    constructor(canvas, defaultCamera, parameters, basePath)\r\n    {\r\n        this.canvas = canvas;\r\n        this.defaultCamera = defaultCamera;\r\n        this.parameters = parameters;\r\n        this.basePath = basePath;\r\n        this.shader = undefined; // current shader\r\n\r\n        this.currentWidth  = 0;\r\n        this.currentHeight = 0;\r\n\r\n        this.shaderCache = new ShaderCache(basePath + \"src/shaders/\", [\r\n            \"primitive.vert\",\r\n            \"metallic-roughness.frag\",\r\n            \"tonemapping.glsl\",\r\n            \"textures.glsl\"\r\n        ]);\r\n\r\n        let requiredWebglExtensions = [\r\n            \"EXT_shader_texture_lod\",\r\n            \"OES_standard_derivatives\",\r\n            \"OES_element_index_uint\",\r\n            \"EXT_texture_filter_anisotropic\",\r\n            \"OES_texture_float\",\r\n            \"OES_texture_float_linear\"\r\n        ];\r\n\r\n        LoadWebGLExtensions(requiredWebglExtensions);\r\n\r\n        this.visibleLights = [];\r\n\r\n        this.viewMatrix = mat4.create();\r\n        this.projMatrix = mat4.create();\r\n        this.viewProjectionMatrix = mat4.create();\r\n\r\n        this.currentCameraPosition = vec3.create();\r\n\r\n        this.init();\r\n        this.resize(canvas.canvasWidth, canvas.canvasHeight);\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////\r\n    // Render glTF scene graph\r\n    /////////////////////////////////////////////////////////////////////\r\n\r\n    // app state\r\n    init()\r\n    {\r\n        //TODO: To achieve correct rendering, WebGL runtimes must disable such conversions by setting UNPACK_COLORSPACE_CONVERSION_WEBGL flag to NONE\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthFunc(gl.LEQUAL);\r\n        gl.colorMask(true, true, true, true);\r\n        gl.clearDepth(1.0);\r\n    }\r\n\r\n    resize(width, height)\r\n    {\r\n        if (this.currentWidth !== width || this.currentHeight !== height)\r\n        {\r\n            this.canvas.width  = width;\r\n            this.canvas.height = height;\r\n            this.currentHeight = height;\r\n            this.currentWidth  = width;\r\n            gl.viewport(0, 0, width, height);\r\n        }\r\n    }\r\n\r\n    // frame state\r\n    newFrame()\r\n    {\r\n        gl.clearColor(this.parameters.clearColor[0] / 255.0, this.parameters.clearColor[1] / 255.0, this.parameters.clearColor[2]  / 255.0, 1.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    // render complete gltf scene with given camera\r\n    drawScene(gltf, scene, cameraIndex, recursive, sortByDepth = false, scaleFactor = 1.0)\r\n    {\r\n        let currentCamera = undefined;\r\n\r\n        if(cameraIndex !== -1)\r\n        {\r\n            currentCamera = gltf.cameras[cameraIndex].clone();\r\n        }\r\n        else\r\n        {\r\n            currentCamera = this.defaultCamera;\r\n        }\r\n\r\n        currentCamera.aspectRatio = this.currentWidth / this.currentHeight;\r\n\r\n        this.projMatrix = currentCamera.getProjectionMatrix();\r\n        this.viewMatrix = currentCamera.getViewMatrix(gltf);\r\n        this.currentCameraPosition = currentCamera.getPosition(gltf);\r\n\r\n        this.visibleLights = this.getVisibleLights(gltf, scene);\r\n\r\n        mat4.multiply(this.viewProjectionMatrix, this.projMatrix, this.viewMatrix);\r\n\r\n        // Optional: pass a scene transfrom to be able to translate & rotate using the mouse\r\n\r\n        let transform = mat4.create();\r\n\r\n        if(sortByDepth)\r\n        {\r\n            scene.sortSceneByDepth(gltf, this.viewProjectionMatrix, transform);\r\n        }\r\n\r\n        let scaleMatrix = mat4.create();\r\n        let scaleVector = vec3.fromValues(scaleFactor, scaleFactor, scaleFactor);\r\n        mat4.fromScaling(scaleMatrix, scaleVector);\r\n\r\n        for (let i of scene.nodes)\r\n        {\r\n            this.drawNode(gltf, scene, i, recursive, scaleMatrix);\r\n        }\r\n    }\r\n\r\n    // returns all lights that are relevant for rendering or the default light if there are none\r\n    getVisibleLights(gltf, scene)\r\n    {\r\n        let lights = [];\r\n        for (let light of gltf.lights)\r\n        {\r\n            if (light.node !== undefined)\r\n            {\r\n                if (scene.includesNode(gltf, light.node))\r\n                {\r\n                    lights.push(light);\r\n                }\r\n            }\r\n        }\r\n        return lights.length > 0 ? lights : [ new gltfLight() ];\r\n    }\r\n\r\n    // same transform, recursive\r\n    drawNode(gltf, scene, nodeIndex, recursive, scaleMatrix = mat4.create())\r\n    {\r\n        let node = gltf.nodes[nodeIndex];\r\n\r\n        if(node === undefined)\r\n        {\r\n            console.log(\"Undefined node \" + nodeIndex);\r\n            return;\r\n        }\r\n\r\n        // draw primitive:\r\n        let mesh = gltf.meshes[node.mesh];\r\n        if(mesh !== undefined)\r\n        {\r\n            for (let primitive of mesh.primitives) {\r\n                this.drawPrimitive(gltf, primitive, node.worldTransform, this.viewProjectionMatrix, node.normalMatrix, scaleMatrix);\r\n            }\r\n        }\r\n\r\n        if(recursive)\r\n        {\r\n            for (let i of node.children) {\r\n                this.drawNode(gltf, scene, i, recursive, scaleMatrix);\r\n            }\r\n        }\r\n    }\r\n\r\n    // vertices with given material\r\n    drawPrimitive(gltf, primitive, modelMatrix, viewProjectionMatrix, normalMatrix, scaleMatrix)\r\n    {\r\n        if (primitive.skip) return;\r\n\r\n        const material = gltf.materials[primitive.material];\r\n\r\n        //select shader permutation, compile and link program.\r\n\r\n        let fragDefines = material.getDefines().concat(primitive.getDefines());\r\n        this.pushParameterDefines(fragDefines);\r\n\r\n        const fragmentHash = this.shaderCache.selectShader(material.getShaderIdentifier(), fragDefines);\r\n        const vertexHash  = this.shaderCache.selectShader(primitive.getShaderIdentifier(), primitive.getDefines());\r\n\r\n        if(fragmentHash && vertexHash)\r\n        {\r\n            this.shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\r\n        }\r\n\r\n        if(this.shader === undefined)\r\n        {\r\n            return;\r\n        }\r\n\r\n        gl.useProgram(this.shader.program);\r\n\r\n        if (this.parameters.usePunctual)\r\n        {\r\n            this.applyLights(gltf);\r\n        }\r\n\r\n        // update model dependant matrices once per node\r\n        this.shader.updateUniform(\"u_ViewProjectionMatrix\", viewProjectionMatrix);\r\n        this.shader.updateUniform(\"u_ModelMatrix\", modelMatrix);\r\n        this.shader.updateUniform(\"u_NormalMatrix\", normalMatrix, false);\r\n\t\tthis.shader.updateUniform(\"u_ScaleMatrix\", scaleMatrix, false);\r\n        this.shader.updateUniform(\"u_Gamma\", this.parameters.gamma, false);\r\n        this.shader.updateUniform(\"u_Exposure\", this.parameters.exposure, false);\r\n        this.shader.updateUniform(\"u_Camera\", this.currentCameraPosition, false);\r\n\r\n        if (material.doubleSided) {\r\n            gl.disable(gl.CULL_FACE);\r\n        } else {\r\n            gl.enable(gl.CULL_FACE);\r\n        }\r\n\r\n        if(material.alphaMode === 'BLEND')\r\n        {\r\n            gl.enable(gl.BLEND);\r\n            //gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            //gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA); // non pre mult alpha\r\n            gl.blendEquation(gl.FUNC_ADD);\r\n\r\n            // pre multiplied alpha\r\n            // gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n            // gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        }\r\n        else\r\n        {\r\n            gl.disable(gl.BLEND);\r\n        }\r\n\r\n        const drawIndexed = primitive.indices !== undefined;\r\n        if (drawIndexed)\r\n        {\r\n            if (!SetIndices(gltf, primitive.indices))\r\n            {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let vertexCount = 0;\r\n        for (let attrib of primitive.attributes)\r\n        {\r\n            let gltfAccessor = gltf.accessors[attrib.accessor];\r\n            vertexCount = gltfAccessor.count;\r\n\r\n            if (!EnableAttribute(gltf, this.shader.getAttribLocation(attrib.name), gltfAccessor))\r\n            {\r\n                return; // skip this primitive.\r\n            }\r\n        }\r\n\r\n        for(let [uniform, val] of material.getProperties().entries())\r\n        {\r\n            this.shader.updateUniform(uniform, val);\r\n        }\r\n\r\n        for(let i = 0; i < material.textures.length; ++i)\r\n        {\r\n            let info = material.textures[i];\r\n            if (!SetTexture(this.shader.getUniformLocation(info.samplerName), gltf, info, i)) // binds texture and sampler\r\n            {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.parameters.useIBL)\r\n        {\r\n            this.applyEnvironmentMap(gltf, material.textures.length);\r\n        }\r\n\r\n        if (drawIndexed)\r\n        {\r\n            let indexAccessor = gltf.accessors[primitive.indices];\r\n            gl.drawElements(primitive.mode, indexAccessor.count, indexAccessor.componentType, indexAccessor.byteOffset);\r\n        }\r\n        else\r\n        {\r\n            gl.drawArrays(primitive.mode, 0, vertexCount);\r\n        }\r\n\r\n        for (let attrib of primitive.attributes)\r\n        {\r\n            gl.disableVertexAttribArray(this.shader.getAttribLocation(attrib.name));\r\n        }\r\n    }\r\n\r\n    pushParameterDefines(fragDefines)\r\n    {\r\n        if (this.parameters.usePunctual)\r\n        {\r\n            fragDefines.push(\"USE_PUNCTUAL 1\");\r\n            fragDefines.push(\"LIGHT_COUNT \" + this.visibleLights.length);\r\n        }\r\n\r\n        if (this.parameters.useIBL)\r\n        {\r\n            fragDefines.push(\"USE_IBL 1\");\r\n            fragDefines.push(\"USE_TEX_LOD 1\");\r\n        }\r\n\r\n        if (this.parameters.useHdr)\r\n        {\r\n            fragDefines.push(\"USE_HDR 1\");\r\n        }\r\n\r\n        switch(this.parameters.toneMap)\r\n        {\r\n            case(ToneMaps.UNCHARTED):\r\n                fragDefines.push(\"TONEMAP_UNCHARTED 1\");\r\n                break;\r\n            case(ToneMaps.HEJL_RICHARD):\r\n                fragDefines.push(\"TONEMAP_HEJLRICHARD 1\");\r\n                break;\r\n            case(ToneMaps.LINEAR):\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if(this.parameters.debugOutput !== DebugOutput.NONE)\r\n        {\r\n            fragDefines.push(\"DEBUG_OUTPUT 1\");\r\n        }\r\n\r\n        switch(this.parameters.debugOutput)\r\n        {\r\n            case(DebugOutput.METALLIC):\r\n                fragDefines.push(\"DEBUG_METALLIC 1\");\r\n                break;\r\n            case(DebugOutput.ROUGHNESS):\r\n                fragDefines.push(\"DEBUG_ROUGHNESS 1\");\r\n                break;\r\n            case(DebugOutput.NORMAL):\r\n                fragDefines.push(\"DEBUG_NORMAL 1\");\r\n                break;\r\n            case(DebugOutput.BASECOLOR):\r\n                fragDefines.push(\"DEBUG_BASECOLOR 1\");\r\n                break;\r\n            case(DebugOutput.OCCLUSION):\r\n                fragDefines.push(\"DEBUG_OCCLUSION 1\");\r\n                break;\r\n            case(DebugOutput.EMISIVE):\r\n                fragDefines.push(\"DEBUG_EMISSIVE 1\");\r\n                break;\r\n            case(DebugOutput.F0):\r\n                fragDefines.push(\"DEBUG_F0 1\");\r\n                break;\r\n            case(DebugOutput.ALPHA):\r\n                fragDefines.push(\"DEBUG_ALPHA 1\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyLights(gltf)\r\n    {\r\n        let uniformLights = [];\r\n        for (let light of this.visibleLights)\r\n        {\r\n            uniformLights.push(light.toUniform(gltf));\r\n        }\r\n\r\n        this.shader.updateUniform(\"u_Lights\", uniformLights);\r\n    }\r\n\r\n    applyEnvironmentMap(gltf, texSlotOffset)\r\n    {\r\n        let diffuseEnvMap = new gltfTextureInfo(gltf.textures.length - 3, 0);\r\n        let specularEnvMap = new gltfTextureInfo(gltf.textures.length - 2, 0);\r\n        let lut = new gltfTextureInfo(gltf.textures.length - 1);\r\n\r\n        specularEnvMap.generateMips = false;\r\n        lut.generateMips = false;\r\n\r\n        SetTexture(this.shader.getUniformLocation(\"u_DiffuseEnvSampler\"), gltf, diffuseEnvMap, texSlotOffset);\r\n        SetTexture(this.shader.getUniformLocation(\"u_SpecularEnvSampler\"), gltf, specularEnvMap, texSlotOffset + 1);\r\n        SetTexture(this.shader.getUniformLocation(\"u_brdfLUT\"), gltf, lut, texSlotOffset + 2);\r\n\r\n        this.shader.updateUniform(\"u_ScaleIBLAmbient\", jsToGl([1, 1, gltf.textures.length, 0]));\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this.shaderCache.destroy();\r\n    }\r\n};\r\n\r\nexport { gltfRenderer };\r\n","import { Environments, ToneMaps, DebugOutput } from './rendering_parameters.js';\r\n\r\nclass gltfUserInterface\r\n{\r\n    constructor(\r\n        modelPathProvider,\r\n        selectedModel,\r\n        renderingParameters,\r\n        stats)\r\n    {\r\n        this.modelPathProvider = modelPathProvider;\r\n        this.selectedModel = selectedModel;\r\n        this.renderingParameters = renderingParameters;\r\n        this.stats = stats;\r\n\r\n        this.gui = undefined;\r\n        this.gltfFolder = undefined;\r\n\r\n        this.onModelSelected = undefined;\r\n        this.onNextSceneSelected = undefined;\r\n        this.onPreviousSceneSelected = undefined;\r\n    }\r\n\r\n    initialize()\r\n    {\r\n        this.gui = new dat.GUI({ width: 300 });\r\n        this.gltfFolder = this.gui.addFolder(\"glTF\");\r\n\r\n        this.initializeModelsDropdown();\r\n        this.initializeSceneSelection();\r\n        this.initializeLightingSettings();\r\n        this.initializeDebugSettings();\r\n        this.initializeMonitoringView();\r\n        this.gltfFolder.open();\r\n    }\r\n\r\n    initializeModelsDropdown()\r\n    {\r\n        const modelKeys = this.modelPathProvider.getAllKeys();\r\n        if (!modelKeys.includes(this.selectedModel))\r\n        {\r\n            this.selectedModel = modelKeys[0];\r\n        }\r\n\r\n        const self = this;\r\n        this.gltfFolder.add(this, \"selectedModel\", modelKeys).name(\"Model\").onChange(modelKey => self.onModelSelected(modelKey));\r\n    }\r\n\r\n    initializeSceneSelection()\r\n    {\r\n        const scenesFolder = this.gltfFolder.addFolder(\"Scene Index\");\r\n        scenesFolder.add(this, \"onPreviousSceneSelected\").name(\"←\");\r\n        scenesFolder.add(this, \"onNextSceneSelected\").name(\"→\");\r\n    }\r\n\r\n    initializeLightingSettings()\r\n    {\r\n        const self = this;\r\n        const lightingFolder = this.gui.addFolder(\"Lighting\");\r\n        lightingFolder.add(this.renderingParameters, \"useIBL\").name(\"Image-Based Lighting\");\r\n        lightingFolder.add(this.renderingParameters, \"usePunctual\").name(\"Punctual Lighting\");\r\n        lightingFolder.add(this.renderingParameters, \"environment\", Environments).name(\"Environment\")\r\n            .onChange(() => self.onModelSelected(self.selectedModel));\r\n        lightingFolder.add(this.renderingParameters, \"exposure\", 0, 2, 0.1).name(\"Exposure\");\r\n        lightingFolder.add(this.renderingParameters, \"gamma\", 0, 10, 0.1).name(\"Gamma\");\r\n        lightingFolder.add(this.renderingParameters, \"toneMap\", Object.values(ToneMaps)).name(\"Tone Map\");\r\n        lightingFolder.addColor(this.renderingParameters, \"clearColor\", [50, 50, 50]).name(\"Background Color\");\r\n    }\r\n\r\n    initializeDebugSettings()\r\n    {\r\n        const debugFolder = this.gui.addFolder(\"Debug\");\r\n        debugFolder.add(this.renderingParameters, \"debugOutput\", Object.values(DebugOutput)).name(\"Debug Output\");\r\n    }\r\n\r\n    initializeMonitoringView()\r\n    {\r\n        const monitoringFolder = this.gui.addFolder(\"Performance\");\r\n        this.stats.domElement.height = \"48px\";\r\n        for (const child of this.stats.domElement.children)\r\n        {\r\n            child.style.display = \"\";\r\n        }\r\n        this.stats.domElement.style.position = \"static\";\r\n        const statsList = document.createElement(\"li\");\r\n        statsList.appendChild(this.stats.domElement);\r\n        statsList.classList.add(\"gui-stats\");\r\n        monitoringFolder.__ul.appendChild(statsList);\r\n    }\r\n}\r\n\r\nexport { gltfUserInterface };\r\n","import { mat4, vec3 } from 'gl-matrix';\r\nimport { gltfCamera } from './camera.js';\r\nimport { jsToGl, clamp } from './utils.js';\r\n\r\nclass UserCamera extends gltfCamera\r\n{\r\n    constructor(\r\n        position = [0, 0, 0],\r\n        target = [0, 0,0],\r\n        up = [0, 1, 0],\r\n        xRot = 0, yRot = 0,\r\n        zoom = 1)\r\n    {\r\n        super();\r\n\r\n        this.position = jsToGl(position);\r\n        this.target = jsToGl(target);\r\n        this.up = jsToGl(up);\r\n        this.xRot = xRot;\r\n        this.yRot = yRot;\r\n        this.zoom = zoom;\r\n        this.zoomFactor = 1.04;\r\n        this.rotateSpeed = 1 / 180;\r\n    }\r\n\r\n    getViewMatrix(gltf)\r\n    {\r\n        let view = mat4.create();\r\n        mat4.lookAt(view, this.position, this.target, this.up);\r\n        return view;\r\n    }\r\n\r\n    getPosition(gltf)\r\n    {\r\n        return this.position;\r\n    }\r\n\r\n    updatePosition()\r\n    {\r\n        // calculate direction from focus to camera (assuming camera is at positive z)\r\n        // yRot rotates *around* x-axis, xRot rotates *around* y-axis\r\n        let direction = vec3.fromValues(0, 0, 1);\r\n        const zero = vec3.create();\r\n        vec3.rotateX(direction, direction, zero, -this.yRot);\r\n        vec3.rotateY(direction, direction, zero, -this.xRot);\r\n\r\n        let position = vec3.create();\r\n        vec3.scale(position, direction, this.zoom);\r\n        vec3.add(position, position, this.target);\r\n\r\n        this.position = position;\r\n    }\r\n\r\n    zoomIn(value)\r\n    {\r\n        if (value > 0)\r\n        {\r\n            this.zoom *= this.zoomFactor;\r\n        }\r\n        else\r\n        {\r\n            this.zoom /= this.zoomFactor;\r\n        }\r\n    }\r\n\r\n    rotate(x, y)\r\n    {\r\n        const yMax = Math.PI / 2 - 0.01;\r\n        this.xRot += (x * this.rotateSpeed);\r\n        this.yRot += (y * this.rotateSpeed);\r\n        this.yRot = clamp(this.yRot, -yMax, yMax);\r\n    }\r\n\r\n    fitViewToAsset(gltf)\r\n    {\r\n        let min = vec3.fromValues(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n        let max = vec3.fromValues(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE);\r\n\r\n\t\tthis.getAssetExtends(gltf, min, max);\r\n\r\n\t\tlet scaleFactor = 1.0;\r\n\t\tlet minValue = Math.min(min[0], Math.min(min[1], min[2]));\r\n\t\tlet maxValue = Math.max(max[0], Math.max(max[1], max[2]));\r\n\t\tlet deltaValue = maxValue - minValue;\r\n\t\tscaleFactor = 1.0 / deltaValue;\r\n\r\n        for (let i of [0, 1, 2])\r\n        {\r\n\t\t\tmin[i] *= scaleFactor;\r\n\t\t\tmax[i] *= scaleFactor;\r\n        }\r\n\r\n        this.fitCameraTargetToExtends(min, max);\r\n        this.fitZoomToExtends(min, max);\r\n\r\n\t\treturn scaleFactor;\r\n    }\r\n\r\n    getAssetExtends(gltf, outMin, outMax)\r\n    {\r\n        for (const node of gltf.nodes.filter(n => n.mesh !== undefined))\r\n        {\r\n            const mesh = gltf.meshes[node.mesh];\r\n            if (mesh.primitives === undefined)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            for (const primitive of mesh.primitives)\r\n            {\r\n                const attribute = primitive.attributes.find(a => a.attribute == \"POSITION\");\r\n                if (attribute === undefined)\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                const accessor = gltf.accessors[attribute.accessor];\r\n                let assetMin = vec3.create();\r\n                let assetMax = vec3.create();\r\n                this.getExtendsFromAccessor(accessor, node.worldTransform, assetMin, assetMax);\r\n\r\n                for (let i of [0, 1, 2])\r\n                {\r\n                    outMin[i] = Math.min(outMin[i], assetMin[i]);\r\n                    outMax[i] = Math.max(outMax[i], assetMax[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fitZoomToExtends(min, max)\r\n    {\r\n        const maxAxisLength = Math.max(max[0] - min[0], max[1] - min[1]);\r\n        this.zoom = this.getFittingZoom(maxAxisLength);\r\n    }\r\n\r\n    fitCameraTargetToExtends(min, max)\r\n    {\r\n        for (let i of [0, 1, 2])\r\n        {\r\n            this.target[i] = (max[i] + min[i]) / 2;\r\n        }\r\n    }\r\n\r\n    getFittingZoom(axisLength)\r\n    {\r\n        const yfov = this.yfov;\r\n        const xfov = this.yfov * this.aspectRatio;\r\n\r\n        const yZoom = axisLength / 2 / Math.tan(yfov / 2);\r\n        const xZoom = axisLength / 2 / Math.tan(xfov / 2);\r\n\r\n        return Math.max(xZoom, yZoom);\r\n    }\r\n\r\n    getExtendsFromAccessor(accessor, worldTransform, outMin, outMax)\r\n    {\r\n        let boxMin = vec3.create();\r\n        vec3.transformMat4(boxMin, jsToGl(accessor.min), worldTransform);\r\n\r\n        let boxMax = vec3.create();\r\n        vec3.transformMat4(boxMax, jsToGl(accessor.max), worldTransform);\r\n\r\n        let center = vec3.create();\r\n        vec3.add(center, boxMax, boxMin);\r\n        vec3.scale(center, center, 0.5);\r\n\r\n        let centerToSurface = vec3.create();\r\n        vec3.sub(centerToSurface, boxMax, center);\r\n\r\n        const radius = vec3.length(centerToSurface);\r\n\r\n        for (let i of [1, 2, 3])\r\n        {\r\n            outMin[i] = center[i] - radius;\r\n            outMax[i] = center[i] + radius;\r\n        }\r\n    }\r\n};\r\n\r\nexport { UserCamera };\r\n","class GlbParser\r\n{\r\n    constructor(data)\r\n    {\r\n        this.data = data;\r\n        this.glbHeaderInts = 3;\r\n        this.glbChunkHeaderInts = 2;\r\n        this.glbMagic = 0x46546C67;\r\n        this.glbVersion = 2;\r\n        this.jsonChunkType = 0x4E4F534A;\r\n        this.binaryChunkType = 0x004E4942;\r\n    }\r\n\r\n    extractGlbData()\r\n    {\r\n        const glbInfo = this.getCheckedGlbInfo();\r\n        if (glbInfo === undefined)\r\n        {\r\n            return undefined;\r\n        }\r\n\r\n        let json = undefined;\r\n        let buffers = [];\r\n        const chunkInfos = this.getAllChunkInfos();\r\n        for (let chunkInfo of chunkInfos)\r\n        {\r\n            if (chunkInfo.type == this.jsonChunkType && !json)\r\n            {\r\n                json = this.getJsonFromChunk(chunkInfo);\r\n            }\r\n            else if (chunkInfo.type == this.binaryChunkType)\r\n            {\r\n                buffers.push(this.getBufferFromChunk(chunkInfo));\r\n            }\r\n        }\r\n\r\n        return { json: json, buffers: buffers };\r\n    }\r\n\r\n    getCheckedGlbInfo()\r\n    {\r\n        const header = new Uint32Array(this.data, 0, this.glbHeaderInts);\r\n        const magic = header[0];\r\n        const version = header[1];\r\n        const length = header[2];\r\n\r\n        if (!this.checkEquality(magic, this.glbMagic, \"glb magic\") ||\r\n            !this.checkEquality(version, this.glbVersion, \"glb header version\") ||\r\n            !this.checkEquality(length, this.data.byteLength, \"glb byte length\"))\r\n        {\r\n            return undefined;\r\n        }\r\n\r\n        return { \"magic\": magic, \"version\": version, \"length\": length };\r\n    }\r\n\r\n    getAllChunkInfos()\r\n    {\r\n        let infos = [];\r\n        let chunkStart = this.glbHeaderInts * 4;\r\n        while (chunkStart < this.data.byteLength)\r\n        {\r\n            const chunkInfo = this.getChunkInfo(chunkStart);\r\n            infos.push(chunkInfo);\r\n            chunkStart += chunkInfo.length + this.glbChunkHeaderInts * 4;\r\n        }\r\n        return infos;\r\n    }\r\n\r\n    getChunkInfo(headerStart)\r\n    {\r\n        const header = new Uint32Array(this.data, headerStart, this.glbChunkHeaderInts);\r\n        const chunkStart = headerStart + this.glbChunkHeaderInts * 4;\r\n        const chunkLength = header[0];\r\n        const chunkType = header[1];\r\n        return { \"start\": chunkStart, \"length\": chunkLength, \"type\": chunkType };\r\n    }\r\n\r\n    getJsonFromChunk(chunkInfo)\r\n    {\r\n        const chunkLength = chunkInfo.length;\r\n        const jsonStart = (this.glbHeaderInts + this.glbChunkHeaderInts) * 4;\r\n        const jsonSlice = new Uint8Array(this.data, jsonStart, chunkLength);\r\n        return JSON.parse(String.fromCharCode.apply(null, jsonSlice));\r\n    }\r\n\r\n    getBufferFromChunk(chunkInfo)\r\n    {\r\n        return this.data.slice(chunkInfo.start, chunkInfo.start + chunkInfo.length);\r\n    }\r\n\r\n    checkEquality(actual, expected, name)\r\n    {\r\n        if (actual == expected)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        console.error(\"Found invalid/unsupported \" + name + \", expected: \" + expected + \", but was: \" + actual);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport { GlbParser };\r\n","import { glTF } from './gltf.js';\r\nimport { gltfImage, ImageMimeType } from './image.js';\r\nimport { gltfLoader } from './loader.js';\r\nimport { gltfModelPathProvider } from './model_path_provider.js';\r\nimport { gltfRenderer } from './renderer.js';\r\nimport { gltfRenderingParameters } from './rendering_parameters.js';\r\nimport { gltfSampler } from './sampler.js';\r\nimport { gltfTexture } from './texture.js';\r\nimport { gltfUserInterface } from './user_interface.js';\r\nimport { UserCamera } from './user_camera.js';\r\nimport { jsToGl, getIsGlb, getIsGltf, getFileNameWithoutExtension, Timer } from './utils.js';\r\nimport { GlbParser } from './glbParser';\r\n\r\nclass gltfViewer\r\n{\r\n    constructor(\r\n        canvas,\r\n        modelIndex,\r\n        headless = false,\r\n        onRendererReady = undefined,\r\n        basePath = \"\",\r\n        initialModel = \"\",\r\n        environmentMap = \"papermill\")\r\n    {\r\n        this.headless = headless;\r\n        this.onRendererReady = onRendererReady;\r\n        this.basePath = basePath;\r\n        this.initialModel = initialModel;\r\n\r\n        this.lastMouseX = 0.00;\r\n        this.lastMouseY = 0.00;\r\n        this.mouseDown = false;\r\n\r\n        this.lastTouchX = 0.00;\r\n        this.lastTouchY = 0.00;\r\n        this.touchDown = false;\r\n\r\n        // TODO: Avoid depending on global variables.\r\n        window.canvas = canvas;\r\n        canvas.style.cursor = \"grab\";\r\n\r\n        this.loadingTimer = new Timer();\r\n        this.gltf = undefined;\r\n\r\n        this.sceneIndex = 0;\r\n        this.cameraIndex = -1;\r\n\r\n        this.renderingParameters = new gltfRenderingParameters(environmentMap);\r\n\r\n        if (this.headless === true)\r\n        {\r\n            this.hideSpinner();\r\n        }\r\n        else if (this.initialModel.includes(\"/\"))\r\n        {\r\n            // no UI if a path is provided (e.g. in the vscode plugin)\r\n            this.loadFromPath(this.initialModel);\r\n        }\r\n        else\r\n        {\r\n            const self = this;\r\n            this.stats = new Stats();\r\n            this.pathProvider = new gltfModelPathProvider(this.basePath + modelIndex);\r\n            this.pathProvider.initialize().then(() =>\r\n            {\r\n                self.initializeGui();\r\n                self.loadFromPath(self.pathProvider.resolve(self.initialModel));\r\n            });\r\n        }\r\n\r\n        this.userCamera = new UserCamera();\r\n\r\n        this.currentlyRendering = false;\r\n        this.renderer = new gltfRenderer(canvas, this.userCamera, this.renderingParameters, this.basePath);\r\n\r\n        this.render(); // Starts a rendering loop.\r\n    }\r\n\r\n    setCamera(eye = [0.0, 0.0, 0.05], target = [0.0, 0.0, 0.0], up = [0.0, 1.0, 0.0],\r\n        type = \"perspective\",\r\n        znear = 0.01, zfar = 10000.0,\r\n        yfov = 45.0 * Math.PI / 180.0, aspectRatio = 16.0 / 9.0,\r\n        xmag = 1.0, ymag = 1.0)\r\n    {\r\n        this.cameraIndex = -1; // force use default camera\r\n\r\n        this.userCamera.target = jsToGl(target);\r\n        this.userCamera.up = jsToGl(up);\r\n        this.userCamera.position = jsToGl(eye);\r\n        this.userCamera.type = type;\r\n        this.userCamera.znear = znear;\r\n        this.userCamera.zfar = zfar;\r\n        this.userCamera.yfov = yfov;\r\n        this.userCamera.aspectRatio = aspectRatio;\r\n        this.userCamera.xmag = xmag;\r\n        this.userCamera.ymag = ymag;\r\n    }\r\n\r\n    loadFromFileObject(mainFile, additionalFiles)\r\n    {\r\n        const gltfFile = mainFile.name;\r\n        this.notifyLoadingStarted(gltfFile);\r\n\r\n        const reader = new FileReader();\r\n        const self = this;\r\n        if (getIsGlb(gltfFile))\r\n        {\r\n            reader.onloadend = function(event)\r\n            {\r\n                const data = event.target.result;\r\n                const glbParser = new GlbParser(data);\r\n                const glb = glbParser.extractGlbData();\r\n                self.createGltf(gltfFile, glb.json, glb.buffers);\r\n            };\r\n            reader.readAsArrayBuffer(mainFile);\r\n        }\r\n        else\r\n        {\r\n            reader.onloadend = function(event)\r\n            {\r\n                const data = event.target.result;\r\n                const json = JSON.parse(data);\r\n                self.createGltf(gltfFile, json, additionalFiles);\r\n            };\r\n            reader.readAsText(mainFile);\r\n        }\r\n    }\r\n\r\n    loadFromPath(gltfFile, basePath = \"\")\r\n    {\r\n        gltfFile = basePath + gltfFile;\r\n        this.notifyLoadingStarted(gltfFile);\r\n\r\n        const isGlb = getIsGlb(gltfFile);\r\n\r\n        const self = this;\r\n        axios.get(gltfFile, { responseType: isGlb ? \"arraybuffer\" : \"json\" }).then(function(response)\r\n        {\r\n            let json = response.data;\r\n            let buffers = undefined\r\n            if (isGlb)\r\n            {\r\n                const glbParser = new GlbParser(response.data);\r\n                const glb = glbParser.extractGlbData();\r\n                json = glb.json;\r\n                buffers = glb.buffers;\r\n            }\r\n            self.createGltf(gltfFile, json, buffers);\r\n        }).catch(function(error)\r\n        {\r\n            console.error(\"glTF \" + error);\r\n            if (!self.headless) self.hideSpinner();\r\n        });\r\n    }\r\n\r\n    createGltf(path, json, buffers)\r\n    {\r\n        this.renderingParameters.updateEnvironment(this.renderingParameters.environment);\r\n\r\n        let gltf = new glTF(path);\r\n        gltf.fromJson(json);\r\n\r\n        const environmentType = this.renderingParameters.useHdr ? ImageMimeType.HDR : ImageMimeType.JPEG;\r\n        this.addEnvironmentMap(gltf, this.renderingParameters.environment, this.renderingParameters.environmentMipLevel, environmentType);\r\n\r\n        let assetPromises = gltfLoader.load(gltf, buffers);\r\n\r\n        let self = this;\r\n        Promise.all(assetPromises).then(function()\r\n        {\r\n            self.onResize(gltf);\r\n        });\r\n    }\r\n\r\n    isPowerOf2(n)\r\n    {\r\n        return n && (n & (n - 1)) === 0;\r\n    }\r\n\r\n    onResize(gltf)\r\n    {\r\n        let resize = false;\r\n\r\n        if (gltf.images !== undefined)\r\n        {\r\n            let i;\r\n            const imagePromises = [];\r\n            for (i = 0; i < gltf.images.length; i++)\r\n            {\r\n                if (gltf.images[i].image.dataRGBE !== undefined ||\r\n                    this.isPowerOf2(gltf.images[i].image.width) && this.isPowerOf2(gltf.images[i].image.height))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                resize = true;\r\n\r\n                const currentImagePromise = new Promise(function(resolve)\r\n                {\r\n                    const canvas = document.createElement('canvas');\r\n                    const context = canvas.getContext('2d');\r\n\r\n                    function nearestPowerOf2(n)\r\n                    {\r\n                        return Math.pow(2.0, Math.round(Math.log(n) / Math.log(2.0)));\r\n                    }\r\n\r\n                    canvas.width = nearestPowerOf2(gltf.images[i].image.width);\r\n                    canvas.height = nearestPowerOf2(gltf.images[i].image.height);\r\n\r\n                    context.drawImage(gltf.images[i].image, 0, 0, canvas.width, canvas.height);\r\n\r\n                    gltf.images[i].image.src = canvas.toDataURL(\"image/png\");\r\n\r\n                    resolve();\r\n                });\r\n\r\n                imagePromises.push(currentImagePromise);\r\n            }\r\n\r\n            if (resize)\r\n            {\r\n                const self = this;\r\n                Promise.all(imagePromises).then(function()\r\n                {\r\n                    self.onGltfLoaded(gltf);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!resize)\r\n        {\r\n            this.onGltfLoaded(gltf);\r\n        }\r\n    }\r\n\r\n    onGltfLoaded(gltf)\r\n    {\r\n        this.notifyLoadingEnded();\r\n\r\n        if (gltf.scenes.length === 0)\r\n        {\r\n            throw \"No scenes in the gltf\";\r\n        }\r\n\r\n        this.currentlyRendering = false;\r\n\r\n        // unload previous scene\r\n        if (this.gltf !== undefined)\r\n        {\r\n            gltfLoader.unload(this.gltf);\r\n            this.gltf = undefined;\r\n        }\r\n\r\n        this.sceneIndex = gltf.scene === undefined ? 0 : gltf.scene;\r\n        const scene = gltf.scenes[this.sceneIndex];\r\n        scene.applyTransformHierarchy(gltf);\r\n        this.scaleFactor = this.userCamera.fitViewToAsset(gltf);\r\n\r\n        this.gltf = gltf;\r\n        this.currentlyRendering = true;\r\n    }\r\n\r\n    render()\r\n    {\r\n        let self = this;\r\n        function renderFrame(elapsedTime)\r\n        {\r\n            if (!self.headless && self.stats != undefined)\r\n            {\r\n                self.stats.begin();\r\n            }\r\n\r\n            if (self.currentlyRendering)\r\n            {\r\n                self.renderer.newFrame();\r\n\r\n                self.renderer.resize(canvas.clientWidth, canvas.clientHeight);\r\n\r\n                if (self.sceneIndex < 0)\r\n                {\r\n                    self.sceneIndex = 0;\r\n                }\r\n                else if (self.sceneIndex >= self.gltf.scenes.length)\r\n                {\r\n                    self.sceneIndex = self.gltf.scenes.length - 1;\r\n                }\r\n\r\n                if (self.gltf.scenes.length !== 0)\r\n                {\r\n                    if (self.headless == false)\r\n                    {\r\n                        self.userCamera.updatePosition();\r\n                    }\r\n\r\n                    const scene = self.gltf.scenes[self.sceneIndex];\r\n\r\n                    // if transformations happen at runtime, we need to apply the transform hierarchy here\r\n                    // scene.applyTransformHierarchy(gltf);\r\n\r\n                    let alphaScene = scene.getSceneWithAlphaMode(self.gltf, 'BLEND'); // get non opaque\r\n                    if (alphaScene.nodes.length > 0)\r\n                    {\r\n                        // first render opaque objects, oder is not important but could improve performance 'early z rejection'\r\n                        let opaqueScene = scene.getSceneWithAlphaMode(self.gltf, 'BLEND', true);\r\n                        self.renderer.drawScene(self.gltf, opaqueScene, self.cameraIndex, true, false, self.scaleFactor);\r\n\r\n                        // render transparent objects ordered by distance from camera\r\n                        self.renderer.drawScene(self.gltf, alphaScene, self.cameraIndex, true, true, self.scaleFactor);\r\n                    }\r\n                    else\r\n                    {\r\n                        // no alpha materials, render as is\r\n                        self.renderer.drawScene(self.gltf, scene, self.cameraIndex, true, false, self.scaleFactor);\r\n                    }\r\n                }\r\n\r\n                if (self.onRendererReady)\r\n                {\r\n                    self.onRendererReady();\r\n                }\r\n            }\r\n\r\n            if (!self.headless && self.stats != undefined)\r\n            {\r\n                self.stats.end();\r\n            }\r\n\r\n            window.requestAnimationFrame(renderFrame);\r\n        }\r\n\r\n        // After this start executing render loop.\r\n        window.requestAnimationFrame(renderFrame);\r\n    }\r\n\r\n    onMouseDown(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            this.mouseDown = true;\r\n            this.lastMouseX = event.clientX;\r\n            this.lastMouseY = event.clientY;\r\n            canvas.style.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    onMouseUp(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            this.mouseDown = false;\r\n            canvas.style.cursor = \"grab\";\r\n        }\r\n    }\r\n\r\n    onMouseWheel(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            event.preventDefault();\r\n            this.userCamera.zoomIn(event.deltaY);\r\n            canvas.style.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    onMouseMove(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            if (!this.mouseDown)\r\n            {\r\n                canvas.style.cursor = \"grab\";\r\n                return;\r\n            }\r\n\r\n            const newX = event.clientX;\r\n            const newY = event.clientY;\r\n\r\n            const deltaX = newX - this.lastMouseX;\r\n            const deltaY = newY - this.lastMouseY;\r\n\r\n            this.lastMouseX = newX;\r\n            this.lastMouseY = newY;\r\n\r\n            this.userCamera.rotate(deltaX, deltaY);\r\n        }\r\n    }\r\n\r\n    onTouchStart(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            this.touchDown = true;\r\n            this.lastTouchX = event.touches[0].clientX;\r\n            this.lastTouchY = event.touches[0].clientY;\r\n        }\r\n    }\r\n\r\n    onTouchEnd(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            this.touchStart = false;\r\n        }\r\n    }\r\n\r\n    onTouchMove(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            if (!touchDown)\r\n            {\r\n                return;\r\n            }\r\n\r\n            const newX = event.touches[0].clientX;\r\n            const newY = event.touches[0].clientY;\r\n\r\n            const deltaX = newX - this.lastTouchX;\r\n            const deltaY = newY - this.lastTouchY;\r\n\r\n            this.lastTouchX = newX;\r\n            this.lastTouchY = newY;\r\n\r\n            this.userCamera.rotate(deltaX, deltaY);\r\n        }\r\n    }\r\n\r\n    // for some reason, the drop event does not work without this\r\n    dragOverHandler(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    dropEventHandler(event)\r\n    {\r\n        if (this.currentlyRendering)\r\n        {\r\n            event.preventDefault();\r\n\r\n            let additionalFiles = [];\r\n            let mainFile;\r\n            for (const file of event.dataTransfer.files)\r\n            {\r\n                if (getIsGltf(file.name) || getIsGlb(file.name))\r\n                {\r\n                    mainFile = file;\r\n                }\r\n                else\r\n                {\r\n                    additionalFiles.push(file);\r\n                }\r\n            }\r\n\r\n            if (mainFile === undefined)\r\n            {\r\n                console.warn(\"No gltf/glb file found. Provided files: \" + additionalFiles.map(f => f.name).join(\", \"));\r\n                return;\r\n            }\r\n\r\n            this.loadFromFileObject(mainFile, additionalFiles);\r\n        }\r\n    }\r\n\r\n    initializeGui()\r\n    {\r\n        const gui = new gltfUserInterface(\r\n            this.pathProvider,\r\n            this.initialModel,\r\n            this.renderingParameters,\r\n            this.stats);\r\n\r\n        const self = this;\r\n        gui.onModelSelected = (model) => self.loadFromPath(this.pathProvider.resolve(model));\r\n        gui.onNextSceneSelected = () => self.sceneIndex++;\r\n        gui.onPreviousSceneSelected = () => self.sceneIndex--;\r\n\r\n        gui.initialize();\r\n    }\r\n\r\n    parseModelIndex(jsonIndex)\r\n    {\r\n        const modelDictionary = {};\r\n\r\n        let ignoreVariants = [\"glTF-Draco\", \"glTF-Embedded\"];\r\n\r\n        for (let entry of jsonIndex)\r\n        {\r\n            if (entry.variants !== undefined)\r\n            {\r\n                for (let variant of Object.keys(entry.variants))\r\n                {\r\n                    if (!ignoreVariants.includes(variant))\r\n                    {\r\n                        const path = entry.name + '/' + variant + '/' + entry.variants[variant];\r\n                        const fileName = getFileNameWithoutExtension(path);\r\n                        let identifier = fileName;\r\n                        if (variant !== \"glTF\")\r\n                        {\r\n                            identifier += \" (\" + variant.replace('glTF-', '') + \")\";\r\n                        }\r\n                        modelDictionary[identifier] = path;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return modelDictionary;\r\n    }\r\n\r\n    addEnvironmentMap(gltf, subFolder = \"papermill\", mipLevel = 9, type = ImageMimeType.JPEG)\r\n    {\r\n        let extension;\r\n        switch (type)\r\n        {\r\n            case (ImageMimeType.JPEG):\r\n                extension = \".jpg\";\r\n                break;\r\n            case (ImageMimeType.HDR):\r\n                extension = \".hdr\";\r\n                break;\r\n            default:\r\n                console.error(\"Unknown image type: \" + type);\r\n                return;\r\n        }\r\n\r\n        const imagesFolder = this.basePath + \"assets/images/\" + subFolder + \"/\";\r\n        const diffusePrefix = imagesFolder + \"diffuse/diffuse_\";\r\n        const diffuseSuffix = \"_0\" + extension;\r\n        const specularPrefix = imagesFolder + \"specular/specular_\";\r\n        const specularSuffix = \"_\";\r\n        const sides =\r\n            [\r\n                [\"right\", gl.TEXTURE_CUBE_MAP_POSITIVE_X],\r\n                [\"left\", gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\r\n                [\"top\", gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\r\n                [\"bottom\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\r\n                [\"front\", gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\r\n                [\"back\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\r\n            ];\r\n\r\n        gltf.samplers.push(new gltfSampler(gl.LINEAR, gl.LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE, \"DiffuseCubeMapSampler\"));\r\n        const diffuseCubeSamplerIdx = gltf.samplers.length - 1;\r\n\r\n        gltf.samplers.push(new gltfSampler(gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE, \"SpecularCubeMapSampler\"));\r\n        const specularCubeSamplerIdx = gltf.samplers.length - 1;\r\n\r\n        gltf.samplers.push(new gltfSampler(gl.LINEAR, gl.LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE, \"LUTSampler\"));\r\n        const lutSamplerIdx = gltf.samplers.length - 1;\r\n\r\n        let imageIdx = gltf.images.length;\r\n\r\n        let indices = [];\r\n\r\n        function addSide(basePath, side, mipLevel)\r\n        {\r\n            let stop = false;\r\n            let i = 0;\r\n            for (i = 0; i <= mipLevel; i++)\r\n            {\r\n                const imagePath = basePath + i + extension;\r\n                const image = new gltfImage(imagePath, side, i);\r\n                image.mimeType = type;\r\n                gltf.images.push(image);\r\n                indices.push(++imageIdx);\r\n            }\r\n        };\r\n\r\n        // u_DiffuseEnvSampler faces\r\n        for (const side of sides)\r\n        {\r\n            const imagePath = diffusePrefix + side[0] + diffuseSuffix;\r\n            const image = new gltfImage(imagePath, side[1]);\r\n            image.mimeType = type;\r\n            gltf.images.push(image);\r\n        }\r\n\r\n        // u_DiffuseEnvSampler tex\r\n        gltf.textures.push(new gltfTexture(diffuseCubeSamplerIdx, [imageIdx, ++imageIdx, ++imageIdx, ++imageIdx, ++imageIdx, ++imageIdx], gl.TEXTURE_CUBE_MAP));\r\n\r\n        // u_SpecularEnvSampler tex\r\n        for (const side of sides)\r\n        {\r\n            addSide(specularPrefix + side[0] + specularSuffix, side[1], mipLevel);\r\n        }\r\n\r\n        gltf.textures.push(new gltfTexture(specularCubeSamplerIdx, indices, gl.TEXTURE_CUBE_MAP));\r\n\r\n        gltf.images.push(new gltfImage(this.basePath + \"assets/images/brdfLUT.png\", gl.TEXTURE_2D));\r\n\r\n        // u_brdfLUT tex\r\n        gltf.textures.push(new gltfTexture(lutSamplerIdx, [++imageIdx], gl.TEXTURE_2D));\r\n    }\r\n\r\n    notifyLoadingStarted(path)\r\n    {\r\n        this.loadingTimer.start();\r\n        console.log(\"Loading '%s' with environment '%s'\", path, this.renderingParameters.environment);\r\n\r\n        if (!this.headless)\r\n        {\r\n            this.showSpinner();\r\n        }\r\n    }\r\n\r\n    notifyLoadingEnded()\r\n    {\r\n        this.loadingTimer.stop();\r\n        console.log(\"Loading took %f seconds\", this.loadingTimer.seconds);\r\n\r\n        if (!this.headless)\r\n        {\r\n            this.hideSpinner();\r\n        }\r\n    }\r\n\r\n    showSpinner()\r\n    {\r\n        let spinner = document.getElementById(\"gltf-rv-model-spinner\");\r\n        if (spinner !== undefined)\r\n        {\r\n            spinner.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    hideSpinner()\r\n    {\r\n        let spinner = document.getElementById(\"gltf-rv-model-spinner\");\r\n        if (spinner !== undefined)\r\n        {\r\n            spinner.style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nexport { gltfViewer };\r\n","import { gltfViewer } from './viewer.js';\r\n\r\nfunction gltf_rv(canvasId, index,\r\n    headless = false,\r\n    onRendererReady = undefined,\r\n    basePath = \"\",\r\n    initialModel = \"BoomBox\",\r\n    envMap = \"papermill\")\r\n{\r\n    // TODO: Avoid depending on global variables.\r\n    const canvas = window.canvas = document.getElementById(canvasId);\r\n    if (!canvas)\r\n    {\r\n        console.warn(\"Failed to retrieve the WebGL canvas!\");\r\n        return null;\r\n    }\r\n\r\n    // TODO: Avoid depending on global variables.\r\n    const gl = window.gl = getWebGlContext();\r\n    if (!gl)\r\n    {\r\n        console.warn(\"Failed to get an WebGL rendering context!\");\r\n        return null;\r\n    }\r\n\r\n    const viewer = new gltfViewer(canvas, index, headless, onRendererReady, basePath, initialModel, envMap);\r\n\r\n    canvas.onmousedown = viewer.onMouseDown.bind(viewer);\r\n    document.onmouseup = viewer.onMouseUp.bind(viewer);\r\n    document.onmousemove = viewer.onMouseMove.bind(viewer);\r\n    canvas.onwheel = viewer.onMouseWheel.bind(viewer);\r\n    canvas.ontouchstart = viewer.onTouchStart.bind(viewer);\r\n    document.ontouchend = viewer.onTouchEnd.bind(viewer);\r\n    document.ontouchmove = viewer.onTouchMove.bind(viewer);\r\n\r\n    canvas.ondrop = viewer.dropEventHandler.bind(viewer);\r\n    canvas.ondragover = viewer.dragOverHandler.bind(viewer);\r\n\r\n    return viewer; // Succeeded in creating a glTF viewer!\r\n}\r\n\r\nfunction getWebGlContext()\r\n{\r\n    const parameters = { alpha: false, antialias: true };\r\n    const contextTypes = [ \"webgl\", \"experimental-webgl\" ];\r\n\r\n    let context;\r\n\r\n    for (const contextType of contextTypes)\r\n    {\r\n        context = canvas.getContext(contextType, parameters);\r\n        if (context)\r\n        {\r\n            return context;\r\n        }\r\n    }\r\n}\r\n\r\nexport { gltf_rv };\r\n"],"names":["create","glMatrix.ARRAY_TYPE","multiply","clone","identity","transpose","invert","fromScaling","glMatrix.EPSILON","fromValues","add","subtract","scale","rotateX","rotateY","sub","normalize","forEach","vec4.normalize","vec3.create","vec3.fromValues","dot","vec3.dot","vec3.cross","vec3.len","vec3.normalize","mat3.create","str","min","max","mat4.create","mat4.perspective","mat4.clone","mat4.getTranslation","quat.create","mat4.getRotation","vec3.transformQuat","vec2.create","mat3.multiply","mat4.getScaling","mat4.fromRotationTranslationScale","mat4.multiply","mat4.invert","mat4.transpose","mat4.fromScaling","mat4.lookAt","vec3.rotateX","vec3.rotateY","vec3.scale","vec3.add","vec3.transformMat4","vec3.sub","vec3.length"],"mappings":"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AAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,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AAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;;EAErD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;;EAEtD,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG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"}